{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/make namespace object","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* global document, Office, Word */\n\n/* ==========================================================\n * Style Guide Checker - taskpane.ts  (Fixed version with better error handling)\n *  - Added comprehensive error handling\n *  - Fixed content control operations\n *  - Improved field access patterns\n *  - Better batch processing\n * ========================================================== */\n\nOffice.onReady((info) => {\n  if (info.host !== Office.HostType.Word) return;\n\n  document.getElementById(\"sideload-msg\")?.setAttribute(\"style\", \"display:none\");\n  document.getElementById(\"app-body\")?.setAttribute(\"style\", \"display:flex\");\n\n  bindRulesLoader();\n  bindScan();\n  bindIssueRowClicks();\n\n  const clearBtn =\n    (document.getElementById(\"clearMarkersBtn\") as HTMLButtonElement | null) ||\n    (document.getElementById(\"clearMarkers\") as HTMLButtonElement | null);\n  clearBtn?.addEventListener(\"click\", () => clearMarkers().catch(console.error));\n});\n\n/* ---------------------------- Types/Consts ---------------------------- */\n\ntype IssueKind =\n  | \"indent\"\n  | \"bullet-style\"\n  | \"numbered-style\"\n  | \"figure-empty\"\n  | \"figure-style\"\n  | \"table-empty\"\n  | \"table-style\";\n\ntype Issue = { tag: string; kind: IssueKind; message: string; fixMeta?: any };\n\nconst ISSUE_TAG_PREFIX = \"sgc-\";\nconst POINTS_PER_CM = 28.3464567;\nconst toCm = (pt: number) => (pt || 0) / POINTS_PER_CM;\nconst toPt = (cm: number) => (cm || 0) * POINTS_PER_CM;\nconst round2 = (v: number) => Math.round(v * 100) / 100;\n\nconst BATCH_SIZE = 500; // Reduced batch size for better stability\n\n/* ------------------------------ Globals ------------------------------ */\n\nfunction getRules(): any { return (window as any).styleGuideRules; }\nfunction setRules(obj: any) { (window as any).styleGuideRules = obj; }\n\n/* ------------------------------ Utilities with Error Handling ------------------------------ */\n\nfunction normalizeStyle(name: string, aliases?: Record<string, string>) {\n  try {\n    const raw = (name || \"\").toString().trim();\n    const base = raw.replace(/\\s+/g, \" \").toLowerCase();\n    if (!aliases) return base;\n    for (const [k, v] of Object.entries(aliases)) {\n      const kk = (k || \"\").toString().trim().replace(/\\s+/g, \" \").toLowerCase();\n      if (kk === base) return (v || \"\").toString().trim().replace(/\\s+/g, \" \").toLowerCase();\n    }\n    return base;\n  } catch (error) {\n    console.warn(\"Error normalizing style:\", error);\n    return (name || \"\").toString().trim().toLowerCase();\n  }\n}\n\nfunction normalizeStyleList(input: string | string[], aliases?: Record<string, string>) {\n  try {\n    const arr = Array.isArray(input) ? input : [input];\n    const set = new Set<string>();\n    for (const n of arr) { \n      set.add(n); \n      set.add(normalizeStyle(n, aliases)); \n    }\n    return { \n      set, \n      has: (raw: string) => {\n        try {\n          return set.has(raw) || set.has(normalizeStyle(raw, aliases));\n        } catch {\n          return false;\n        }\n      }\n    };\n  } catch (error) {\n    console.warn(\"Error creating normalized style list:\", error);\n    return { set: new Set<string>(), has: () => false };\n  }\n}\n\nfunction labelsToArray(v: any, fallback: string[]) {\n  try {\n    if (Array.isArray(v)) return v;\n    if (typeof v === \"string\" && v.trim()) return [v.trim()];\n    return fallback;\n  } catch {\n    return fallback;\n  }\n}\n\nlet __issueCounter = 0;\nfunction newIssueTag() { __issueCounter += 1; return String(__issueCounter).padStart(6, \"0\"); }\n\n/* Marker: hidden content control with better error handling */\nasync function markParagraph(ctx: Word.RequestContext, p: Word.Paragraph): Promise<string> {\n  try {\n    const tag = newIssueTag();\n    const r = p.getRange();\n    const cc = r.insertContentControl();\n    cc.tag = ISSUE_TAG_PREFIX + tag;\n    cc.title = \"Style Guide Issue\";\n    cc.appearance = \"Hidden\";\n    \n    // Ensure sync happens immediately for content control creation\n    await ctx.sync();\n    return tag;\n  } catch (error) {\n    console.error(\"Error marking paragraph:\", error);\n    // Return a fallback tag even if marking fails\n    return newIssueTag();\n  }\n}\n\n/* ------------------------------ Enhanced TOC Skip ------------------------------ */\n\nfunction isTocStyleName(rawOrStd: string): boolean {\n  try {\n    const s = (rawOrStd || \"\").toString().trim().toLowerCase();\n    return /^toc(\\s*\\d+)?$/.test(s) || \n           s === \"toc heading\" || \n           s === \"목차\" || \n           /목차\\s*\\d+/.test(s) ||\n           s === \"table of contents\" ||\n           /^contents(\\s*\\d+)?$/.test(s) ||\n           /^차례(\\s*\\d+)?$/.test(s) ||\n           s === \"차례\" ||\n           s.includes(\"table of contents\") ||\n           s.includes(\"목차\");\n  } catch {\n    return false;\n  }\n}\n\nfunction isLikelyTocText(text: string): boolean {\n  try {\n    const t = (text || \"\").replace(/\\u00A0/g, \" \").trim();\n    const reLeaderTabPage = /[.\\u2026\\u00B7\\u2219]{3,}\\s*\\t+\\s*\\d+$/;\n    const reLongLeaderNumber = /[.\\u2026\\u00B7\\u2219]{5,}\\s*\\d+$/;\n    const reSpacesNumber = /[.\\u2026\\u00B7\\u2219]{3,}\\s{2,}\\d+$/;\n    const reTabNumber = /\\t+\\s*\\d+$/;\n    const reMultipleSpacesNumber = /\\s{3,}\\d+$/;\n    const reChapterPattern = /\\d+\\.\\d+.*[\\.\\u2026\\u00B7\\u2219]{2,}.*\\d+$/;\n    \n    return reLeaderTabPage.test(t) || \n           reLongLeaderNumber.test(t) || \n           reSpacesNumber.test(t) ||\n           reTabNumber.test(t) ||\n           reMultipleSpacesNumber.test(t) ||\n           reChapterPattern.test(t);\n  } catch {\n    return false;\n  }\n}\n\nasync function computeTocSkips(ctx: Word.RequestContext, paras: Word.ParagraphCollection): Promise<boolean[]> {\n  try {\n    const skip: boolean[] = new Array(paras.items.length).fill(false);\n\n    // Enhanced style/text checks\n    paras.items.forEach((p, i) => {\n      try {\n        const raw = (p.style || \"\").toLowerCase();\n        const txt = (p.text || \"\").trim();\n\n        if (isTocStyleName(raw) || isLikelyTocText(txt)) {\n          skip[i] = true;\n          return;\n        }\n\n        if (txt.toLowerCase().includes(\"table of contents\") ||\n            txt.toLowerCase().includes(\"목차\") ||\n            txt.toLowerCase().includes(\"차례\")) {\n          skip[i] = true;\n        }\n      } catch (error) {\n        console.warn(`Error checking TOC for paragraph ${i}:`, error);\n        // If there's an error, don't skip by default\n      }\n    });\n\n    // Field-based TOC detection with comprehensive error handling\n    try {\n      const fields = ctx.document.body.getRange().fields;\n      fields.load(\"items\");\n      await ctx.sync();\n\n      if (fields.items && fields.items.length > 0) {\n        for (const f of fields.items as any[]) {\n          try {\n            (f as any).load?.(\"code\");\n          } catch (fieldError) {\n            console.warn(\"Error loading field code:\", fieldError);\n          }\n        }\n        \n        try {\n          await ctx.sync();\n        } catch (syncError) {\n          console.warn(\"Error syncing field codes:\", syncError);\n          return skip; // Return what we have from style/text checks\n        }\n\n        for (const f of fields.items as any[]) {\n          try {\n            const code = String((f as any)?.code ?? \"\");\n            if (/^\\s*TOC\\b/i.test(code)) {\n              const tocRange = (f as any).getRange?.();\n              if (tocRange) {\n                const tocParas = tocRange.paragraphs;\n                tocParas.load(\"items\");\n                await ctx.sync();\n                \n                for (const tp of tocParas.items) {\n                  try {\n                    const text = tp.text;\n                    const style = tp.style;\n                    paras.items.forEach((p, i) => {\n                      if (p.text === text && p.style === style) {\n                        skip[i] = true;\n                      }\n                    });\n                  } catch (tocParaError) {\n                    console.warn(\"Error processing TOC paragraph:\", tocParaError);\n                  }\n                }\n              }\n            }\n          } catch (fieldProcessError) {\n            console.warn(\"Error processing individual field:\", fieldProcessError);\n          }\n        }\n      }\n    } catch (fieldsError) {\n      console.warn(\"Error with field-based TOC detection:\", fieldsError);\n      // Continue with style/text-based detection only\n    }\n\n    return skip;\n  } catch (error) {\n    console.error(\"Critical error in computeTocSkips:\", error);\n    // Return safe default - don't skip any paragraphs if we can't determine\n    return new Array(paras.items?.length || 0).fill(false);\n  }\n}\n\n/* ------------------------------ Enhanced List Checker (Bullets + Numbered) ------------------------------ */\n\nasync function checkBulletedListCompliance(\n  ctx: Word.RequestContext,\n  paragraph: Word.Paragraph,\n  rules: any,\n  aliases: Record<string, string>,\n  issues: Issue[]\n): Promise<void> {\n  \n  try {\n    const raw = paragraph.style || \"\";\n    const std = normalizeStyle(raw, aliases);\n    const txt = paragraph.text || \"\";\n\n    console.log(\"[DEBUG] Checking paragraph: \\\"\" + txt.substring(0, 50) + \"...\\\" | Style: \\\"\" + raw + \"\\\" | Normalized: \\\"\" + std + \"\\\"\");\n\n    // Skip placeholder text controls and empty paragraphs\n    if (txt.includes(\"텍스트를 입력하려면 여기를 클릭하거나 탭하세요\") || \n        txt.includes(\"Click or tap here to enter text\") ||\n        txt.includes(\"Type here\") ||\n        txt.trim() === \"\" ||\n        /^(\\[.*\\]|\\{.*\\}|\\(.*\\))$/.test(txt.trim())) {\n      console.log(\"[DEBUG] Skipping placeholder/empty paragraph\");\n      return;\n    }\n\n    // Skip TOC-like content\n    if (isTocStyleName(raw) || isTocStyleName(std) || isLikelyTocText(txt)) {\n      console.log(\"[DEBUG] Skipping TOC-like content\");\n      return;\n    }\n\n    // Extract rules from the configuration\n    const bulletRule = rules?.rules?.styles?.bullets ?? {};\n    const numberedRule = rules?.rules?.styles?.numberedLists ?? {};\n    \n    const allowedBulletNames: string[] = (bulletRule.allowed ?? [\n      \"TCC 글머리1\", \"TCC 글머리2\", \"TCC 글머리3\", \"TCC 글머리4\"\n    ]);\n    const allowedNumberedNames: string[] = (numberedRule.allowed ?? [\n      \"TCC 번호1\", \"TCC 번호2\", \"TCC 번호3\"\n    ]);\n    \n    const allowedBulletIndentsCm: number[] = (bulletRule.allowedIndentsCm ?? [0.71, 1.21, 1.71, 2.21]);\n    const allowedNumberedIndentsCm: number[] = (numberedRule.allowedIndentsCm ?? [0.71, 1.21, 1.71]);\n    \n    // Combine all allowed list styles\n    const allAllowedListNames = [...allowedBulletNames, ...allowedNumberedNames];\n    const allAllowedIndents = [...allowedBulletIndentsCm, ...allowedNumberedIndentsCm];\n    \n    // Create normalized set of allowed list styles\n    const allowedListStyles = new Set<string>();\n    allAllowedListNames.forEach(styleName => {\n      allowedListStyles.add(styleName);\n      allowedListStyles.add(normalizeStyle(styleName, aliases));\n    });\n\n    // Get indentation policy and heading info\n    const indentPolicy: Record<string, number> = rules?.rules?.indentation?.expectedCmByStyle || {};\n    const indentTolCm = Math.max(rules?.rules?.indentation?.toleranceCm ?? 0.03, 0.02);\n    \n    const headingAllowedRaw: string[] = (rules?.rules?.styles?.headings?.allowed ?? []) as string[];\n    const HEADING_ALLOWED = new Set(headingAllowedRaw.map(s => normalizeStyle(s, aliases)));\n    \n    // Check if this is a heading style - if so, skip list processing\n    const isHeading =\n      HEADING_ALLOWED.has(std) ||\n      HEADING_ALLOWED.has(raw) ||\n      /^(heading|제목)\\s*\\d+/.test(std) ||\n      /^(heading|제목)\\s*\\d+/.test((raw||\"\").toLowerCase());\n    \n    if (isHeading) {\n      console.log(\"[DEBUG] Skipping heading style:\", raw);\n      return;\n    }\n\n    // Enhanced list detection\n    const trimmedText = txt.trim();\n    \n    // First check if text looks like a heading\n    const looksLikeHeading = /^(\\d+\\.)*\\d+\\s+[A-Z]/.test(trimmedText) ||\n                            /^\\d+\\.\\s+[A-Z]/.test(trimmedText) ||        \n                            /^Chapter\\s+\\d+/i.test(trimmedText) ||       \n                            /^제\\s*\\d+/i.test(trimmedText);              \n    \n    if (looksLikeHeading) {\n      console.log(\"[DEBUG] Skipping heading-like text:\", trimmedText.substring(0, 30));\n      return;\n    }\n    \n    const listHeuristics = {\n      hasBulletChar: /^[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□]\\s+/.test(trimmedText),\n      hasDashBullet: /^[\\-–—]\\s+/.test(trimmedText),\n      hasNumbering: /^(\\(?\\d{1,2}\\)|(\\d{1,2}[\\.)]))(\\s+)/.test(trimmedText) && !looksLikeHeading,\n      hasLettering: /^(\\(?[A-Za-z]\\)|([A-Za-z][\\.)]))(\\s+)/.test(trimmedText),\n      hasRoman: /^(\\(?[ivxlc]{1,4}\\)|([ivxlc]{1,4}[\\.)]))(\\s+)/i.test(trimmedText),\n      isWordList: !!paragraph.isListItem,\n      hasTabBullet: /^\\t+[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□\\-–—]\\s+/.test(trimmedText),\n      hasSpaceBullet: /^\\s{2,}[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□\\-–—]\\s+/.test(trimmedText)\n    };\n    \n    const hasVisualListMarkers = listHeuristics.hasBulletChar || \n                                listHeuristics.hasDashBullet ||\n                                listHeuristics.hasNumbering || \n                                listHeuristics.hasLettering ||\n                                listHeuristics.hasRoman ||\n                                listHeuristics.hasTabBullet ||\n                                listHeuristics.hasSpaceBullet;\n    \n    const isAnyKindOfList = listHeuristics.isWordList || hasVisualListMarkers;\n    const isRealList = listHeuristics.isWordList && hasVisualListMarkers;\n    const hasWrongStyleList = hasVisualListMarkers && !listHeuristics.isWordList;\n    \n    const isBulletType = listHeuristics.hasBulletChar || listHeuristics.hasDashBullet;\n    const isNumberedType = listHeuristics.hasNumbering || listHeuristics.hasLettering || listHeuristics.hasRoman;\n    \n    // Only check paragraphs that actually look like lists\n    if (!isAnyKindOfList) {\n      console.log(\"[DEBUG] Not a list, skipping list checks\");\n      return;\n    }\n\n    // Calculate current indent for fixMeta\n    const leftCm = toCm((paragraph.leftIndent as any) || 0);\n    const firstCm = toCm((paragraph.firstLineIndent as any) || 0);\n    const currentIndent = leftCm + firstCm;\n\n    // Check 1: Style compliance for all list-like paragraphs\n    const hasCorrectListStyle = allowedListStyles.has(raw) || allowedListStyles.has(std);\n    \n    if (!hasCorrectListStyle) {\n      console.log(\"[DEBUG] ❌ STYLE ISSUE FOUND - adding to issues\");\n      \n      try {\n        const tag = await markParagraph(ctx, paragraph);\n        \n        let allowedStylesDisplay: string;\n        let issueKind: IssueKind;\n        let fixMeta: any;\n        \n        if (isBulletType) {\n          allowedStylesDisplay = Array.from(new Set(allowedBulletNames)).join(\", \");\n          issueKind = \"bullet-style\";\n          fixMeta = { \n            currentIndent: currentIndent,\n            allowedStyles: allowedBulletNames,\n            allowedIndents: allowedBulletIndentsCm\n          };\n        } else if (isNumberedType) {\n          allowedStylesDisplay = Array.from(new Set(allowedNumberedNames)).join(\", \");\n          issueKind = \"numbered-style\";\n          fixMeta = { \n            currentIndent: currentIndent,\n            allowedStyles: allowedNumberedNames,\n            allowedIndents: allowedNumberedIndentsCm\n          };\n        } else {\n          allowedStylesDisplay = Array.from(new Set(allAllowedListNames)).join(\", \");\n          issueKind = \"bullet-style\";\n          fixMeta = { \n            currentIndent: currentIndent,\n            allowedStyles: allowedBulletNames,\n            allowedIndents: allowedBulletIndentsCm\n          };\n        }\n        \n        issues.push({\n          tag,\n          kind: issueKind,\n          message: \"List paragraph must use: \" + allowedStylesDisplay + \" (found \\\"\" + (raw || std || \"unknown\") + \"\\\").\",\n          fixMeta: fixMeta\n        });\n      } catch (markError) {\n        console.error(\"Error marking paragraph for style issue:\", markError);\n        // Continue processing other issues even if marking fails\n      }\n    }\n\n    // Check 2: Indent compliance (only for real lists with proper formatting)\n    if (isRealList) {\n      try {\n        const textStartIndent = currentIndent;\n\n        // Check if there's a specific indent policy for this style\n        let expectedIndent: number | undefined;\n        \n        if (indentPolicy[raw]) {\n          expectedIndent = indentPolicy[raw];\n        } else {\n          const normalizedStyle = normalizeStyle(raw, aliases);\n          if (indentPolicy[normalizedStyle]) {\n            expectedIndent = indentPolicy[normalizedStyle];\n          }\n        }\n\n        if (expectedIndent !== undefined) {\n          const indentDifference = Math.abs(textStartIndent - expectedIndent);\n          \n          if (indentDifference > indentTolCm) {\n            console.log(\"[DEBUG] ❌ INDENT ISSUE FOUND (specific policy) - adding to issues\");\n            try {\n              const tag = await markParagraph(ctx, paragraph);\n              issues.push({\n                tag,\n                kind: \"indent\",\n                message: \"Indent \" + round2(textStartIndent) + \" cm (expected \" + round2(expectedIndent) + \" cm) for style \\\"\" + (raw || std) + \"\\\".\",\n                fixMeta: { expectedCm: expectedIndent }\n              });\n            } catch (markError) {\n              console.error(\"Error marking paragraph for indent issue:\", markError);\n            }\n          }\n        } else {\n          // No specific policy - check against appropriate allowed indent tiers\n          let allowedIndentsCm: number[];\n          \n          if (isBulletType) {\n            allowedIndentsCm = allowedBulletIndentsCm;\n          } else if (isNumberedType) {\n            allowedIndentsCm = allowedNumberedIndentsCm;\n          } else {\n            allowedIndentsCm = allAllowedIndents;\n          }\n          \n          const nearestAllowedIndent = allowedIndentsCm.reduce((best, cm) => {\n            const distance = Math.abs(textStartIndent - cm);\n            return distance < best.distance ? { cm, distance } : best;\n          }, { \n            cm: allowedIndentsCm[0], \n            distance: Number.POSITIVE_INFINITY \n          });\n\n          const tierTolerance = indentTolCm + 0.03;\n          \n          if (nearestAllowedIndent.distance > tierTolerance) {\n            console.log(\"[DEBUG] ❌ INDENT ISSUE FOUND (tier-based) - adding to issues\");\n            try {\n              const tag = await markParagraph(ctx, paragraph);\n              const allowedIndentsDisplay = allowedIndentsCm.map(v => round2(v)).join(\", \");\n              issues.push({\n                tag,\n                kind: \"indent\",\n                message: \"List indent \" + round2(textStartIndent) + \" cm not in \" + allowedIndentsDisplay + \" cm.\",\n                fixMeta: { expectedCm: nearestAllowedIndent.cm }\n              });\n            } catch (markError) {\n              console.error(\"Error marking paragraph for tier indent issue:\", markError);\n            }\n          }\n        }\n      } catch (indentError) {\n        console.error(\"Error checking indent compliance:\", indentError);\n      }\n    }\n    \n    console.log(\"[DEBUG] --- End of list check for this paragraph ---\\n\");\n    \n  } catch (error) {\n    console.error(\"Error in checkBulletedListCompliance:\", error);\n    // Don't throw - continue processing other paragraphs\n  }\n}\n\n/** After \"<Label> 1[.2]*\", return the remaining text (trimmed-left). */\nfunction tailAfterLabelNumber(text: string, labels: string[]): string {\n  try {\n    const t = (text || \"\").replace(/\\u00A0/g, \" \");\n    const labelAlt = labels.map(l => l.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")).join(\"|\");\n    const re = new RegExp(\n      \"^\\\\s*(?:\" + labelAlt + \")\\\\s*\\\\d+(?:\\\\.\\\\d+)*\\\\s*([\\\\s\\\\S]*)$\",\n      \"i\"\n    );\n    const m = re.exec(t);\n    return m ? m[1].replace(/^\\s+/, \"\") : \"\";\n  } catch {\n    return \"\";\n  }\n}\n\n/** True if the tail clearly continues as a sentence (not a caption head). */\nfunction hasRealSentenceAfterNumber(text: string, labels: string[]): boolean {\n  try {\n    const tail = tailAfterLabelNumber(text, labels);\n    if (!tail) return false;\n\n    if (/^[.:—–-]/.test(tail)) return false;\n\n    const firstWord = /^[A-Za-z]+/.exec(tail);\n    if (firstWord && firstWord[0].charAt(0) === firstWord[0].charAt(0).toLowerCase()) {\n      return true;\n    }\n\n    const determiners = /\\b(the|this|that|these|those|a|an|our|its?|their|there|here|we|it|they|will|can|should|would|could|may|might|must)\\b/i;\n    const earlyVerbs = /\\b(shows?|illustrates?|lists?|presents?|summarizes?|depicts?|compares?|gives?|displays?|demonstrates?|indicates?|describes?|contains?|includes?|provides?|represents?|reveals?|explains?|outlines?|details?|reports?|records?|tracks?|measures?|analyzes?|examines?)\\b/i;\n    const explanatoryPatterns = /\\b(is|are|was|were|has|have|had|does|do|did|will|would|can|could|should|may|might|must)\\b/i;\n    const conjunctions = /\\b(and|but|or|so|yet|for|nor|because|since|although|though|while|whereas|however|therefore|thus|hence)\\b/i;\n\n    const firstEight = tail.split(/\\s+/).slice(0, 8).join(\" \");\n    \n    if (determiners.test(firstEight) || \n        earlyVerbs.test(firstEight) || \n        explanatoryPatterns.test(firstEight) ||\n        conjunctions.test(firstEight)) {\n      return true;\n    }\n\n    if (/^[([{}]/.test(tail)) return false;\n    if (/[.!?]\\s+[A-Z]/.test(tail)) return true;\n\n    return false;\n  } catch {\n    return false;\n  }\n}\n\n/* ------------------------------ Caption helpers ------------------------------ */\n\nfunction joinLabelsToWordBoundary(labels: string[]) {\n  try {\n    return labels.map(l => l.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")).join(\"|\");\n  } catch {\n    return \"\";\n  }\n}\n\nfunction looksLikeCaptionText(text: string, labels: string[]): boolean {\n  try {\n    const t = (text || \"\").replace(/\\u00A0/g, \" \");\n    const re = new RegExp(\"^\\\\s*(?:\" + joinLabelsToWordBoundary(labels) + \")\\\\b\", \"i\");\n    return re.test(t);\n  } catch {\n    return false;\n  }\n}\n\nfunction descriptionAfterNumber(text: string, labels: string[]): string {\n  try {\n    const t = (text ?? \"\").replace(/\\u00A0/g, \" \");\n    const head = new RegExp(\n      \"^\\\\s*(?:\" + joinLabelsToWordBoundary(labels) + \")\\\\s*\\\\d+(?:\\\\.\\\\d+)*\\\\s*[:.\\\\-—–]?\\\\s*\",\n      \"i\"\n    );\n    return t.replace(head, \"\").trim();\n  } catch {\n    return \"\";\n  }\n}\n\nasync function hasChapterSeqForLabelRobust(\n  ctx: Word.RequestContext,\n  p: Word.Paragraph,\n  label: \"Table\" | \"Figure\"\n): Promise<boolean> {\n  try {\n    // First try the Field API approach with better error handling\n    try {\n      const fields = p.getRange().fields;\n      fields.load(\"items\");\n      await ctx.sync();\n      \n      if (fields.items && fields.items.length) {\n        const fieldPromises = fields.items.map(f => {\n          try {\n            return (f as any).load?.(\"code\");\n          } catch {\n            return null;\n          }\n        }).filter(Boolean);\n        \n        if (fieldPromises.length > 0) {\n          await ctx.sync();\n          \n          let hasStyle = false, hasSeq = false, hasArabic = false, hasReset = false;\n          const reSeq = new RegExp(\"\\\\bSEQ\\\\s+\" + label + \"\\\\b\", \"i\");\n          \n          for (const f of fields.items as any[]) {\n            try {\n              const code = String(f?.code ?? \"\");\n              if (/\\bSTYLEREF\\s+1\\s+\\\\s\\b/i.test(code)) hasStyle = true;\n              if (reSeq.test(code)) hasSeq = true;\n              if (/\\*\\s*ARABIC\\b/i.test(code)) hasArabic = true;\n              if (/\\\\s\\s*1\\b/i.test(code)) hasReset = true;\n            } catch (fieldError) {\n              console.warn(\"Error processing field code:\", fieldError);\n            }\n          }\n          \n          if (hasStyle && hasSeq && hasArabic && hasReset) return true;\n        }\n      }\n    } catch (fieldApiError) {\n      console.warn(\"Field API approach failed:\", fieldApiError);\n    }\n\n    // Fallback to OOXML approach with better error handling\n    try {\n      const oox = p.getRange().getOoxml();\n      await ctx.sync();\n      const xml = String(oox.value || \"\");\n\n      const hasFldSimpleStyle = /<w:fldSimple[^>]*\\binstr=\"[^\"]*\\bSTYLEREF\\s+1\\s+\\\\s\\b[^\"]*\"/i.test(xml);\n      const hasFldSimpleSeq   = new RegExp(\n        \"<w:fldSimple[^>]*\\\\binstr=\\\"[^\\\"]*\\\\bSEQ\\\\s+\" + label + \"\\\\b[^\\\"]*\\\\*\\\\s*ARABIC[^\\\"]*\\\\\\\\s\\\\s*1[^\\\"]*\\\"\",\n        \"i\"\n      ).test(xml);\n      if (hasFldSimpleStyle && hasFldSimpleSeq) return true;\n\n      const parts: string[] = [];\n      const reInstr = /<w:instrText\\b[^>]*>([\\s\\S]*?)<\\/w:instrText>/gi;\n      let m: RegExpExecArray | null;\n      while ((m = reInstr.exec(xml)) !== null) { \n        parts.push(m[1]); \n        if (reInstr.lastIndex === m.index) reInstr.lastIndex++; \n      }\n      \n      if (parts.length) {\n        const joined = parts.join(\"\");\n        const hasStyle = /\\bSTYLEREF\\s*1\\s*\\\\s\\b/i.test(joined);\n        const hasSeq   = new RegExp(\"\\\\bSEQ\\\\s*\" + label + \"\\\\b\", \"i\").test(joined);\n        const hasArabic= /\\*\\s*ARABIC\\b/i.test(joined);\n        const hasReset = /\\\\s\\s*1\\b/i.test(joined);\n        if (hasStyle && hasSeq && hasArabic && hasReset) return true;\n      }\n      \n      return false;\n    } catch (ooxmlError) {\n      console.warn(\"OOXML approach failed:\", ooxmlError);\n      return false;\n    }\n  } catch (error) {\n    console.error(\"Critical error in hasChapterSeqForLabelRobust:\", error);\n    return false;\n  }\n}\n\nfunction stripManualPrefix(text: string, labels: string[]): string {\n  try {\n    const head = new RegExp(\n      \"^\\\\s*(?:\" + joinLabelsToWordBoundary(labels) + \")\\\\s*[.\\\\-—–:]?\\\\s*\\\\d+(?:[.\\\\-]\\\\d+)*\\\\s*[.\\\\-—–:]?\\\\s*\",\n      \"i\"\n    );\n    return (text || \"\").replace(head, \"\").trimStart();\n  } catch {\n    return text || \"\";\n  }\n}\n\nfunction prependLabelChapterSeqPrefix(range: Word.Range, label: \"Table\" | \"Figure\") {\n  try {\n    const L = label.replace(/[&<>\"]/g, function(m) {\n      const map: Record<string, string> = { \"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\" };\n      return map[m] || m;\n    });\n    const runs =\n      \"<w:r><w:t>\" + L + \" </w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"begin\\\"/></w:r>\" +\n      \"<w:r><w:instrText xml:space=\\\"preserve\\\"> STYLEREF 1 \\\\s </w:instrText></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"separate\\\"/></w:r>\" +\n      \"<w:r><w:t>1</w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"end\\\"/></w:r>\" +\n      \"<w:r><w:t>.</w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"begin\\\"/></w:r>\" +\n      \"<w:r><w:instrText xml:space=\\\"preserve\\\"> SEQ \" + L + \" \\\\* ARABIC \\\\s 1 </w:instrText></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"separate\\\"/></w:r>\" +\n      \"<w:r><w:t>1</w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"end\\\"/></w:r>\" +\n      \"<w:r><w:t xml:space=\\\"preserve\\\"> </w:t></w:r>\";\n    range.insertOoxml(runs, Word.InsertLocation.start);\n  } catch (error) {\n    console.error(\"Error inserting OOXML:\", error);\n  }\n}\n\n/* ------------------------------ Load Rules / Preview / Clear ------------------------------ */\n\nfunction renderRulesPreview(rules: any) {\n  try {\n    let box =\n      document.getElementById(\"rulesDump\") ||\n      document.getElementById(\"rulesPreview\") ||\n      document.getElementById(\"rulesBox\");\n\n    if (!box) {\n      const statusEl = document.getElementById(\"rulesStatus\");\n      box = document.createElement(\"pre\");\n      box.id = \"rulesPreview\";\n      const st = (box as HTMLElement).style;\n      st.whiteSpace = \"pre-wrap\";\n      st.wordBreak = \"break-word\";\n      st.marginTop = \"8px\";\n      st.padding = \"8px 10px\";\n      st.border = \"1px solid #ddd\";\n      st.borderRadius = \"4px\";\n      st.background = \"#f4f4f4\";\n      st.maxHeight = \"260px\";\n      st.overflow = \"auto\";\n      if (statusEl?.parentElement) statusEl.parentElement.appendChild(box);\n      else document.body.appendChild(box);\n    }\n\n    const pretty = JSON.stringify(rules ?? {}, null, 2);\n    const MAX = 80 * 1024;\n    (box as HTMLElement).textContent = pretty.length > MAX ? pretty.slice(0, MAX) + \"\\n…(truncated)…\" : pretty;\n  } catch (error) {\n    console.error(\"Error rendering rules preview:\", error);\n  }\n}\n\nfunction bindRulesLoader() {\n  try {\n    const fileInput = document.getElementById(\"rulesFileInput\") as HTMLInputElement | null;\n    const loadBtn   = document.getElementById(\"loadRulesBtn\") as HTMLButtonElement | null;\n    const statusEl  = document.getElementById(\"rulesStatus\") as HTMLElement | null;\n\n    const setStatus = (msg: string, color = \"#555\") => { \n      if (statusEl) { \n        statusEl.textContent = msg; \n        statusEl.style.color = color; \n      } \n    };\n    \n    const applyRules = (obj: any) => { \n      setRules(obj); \n      setStatus(\"Rules loaded.\", \"#0a0\"); \n      renderRulesPreview(obj); \n    };\n\n    async function readFile(f: File): Promise<boolean> {\n      try {\n        const txt = await f.text();\n        const json = JSON.parse(txt);\n        applyRules(json);\n        return true;\n      } catch (e) {\n        console.error(\"[SGC] Failed to read/parse file:\", e);\n        setStatus(\"Invalid rules.json (cannot parse).\", \"#c00\");\n        return false;\n      }\n    }\n\n    if (fileInput) {\n      fileInput.accept = \".json,application/json\";\n      fileInput.addEventListener(\"change\", async () => {\n        if (!fileInput.files || fileInput.files.length === 0) return;\n        await readFile(fileInput.files[0]);\n      });\n    }\n\n    async function openPickerAndRead(): Promise<boolean> {\n      if (fileInput) {\n        return await new Promise<boolean>((resolve) => {\n          fileInput.value = \"\";\n          const handler = async () => {\n            fileInput.removeEventListener(\"change\", handler);\n            if (fileInput.files && fileInput.files.length > 0) resolve(await readFile(fileInput.files[0]));\n            else resolve(false);\n          };\n          fileInput.addEventListener(\"change\", handler, { once: true });\n          fileInput.click();\n        });\n      }\n      return false;\n    }\n\n    if (loadBtn) {\n      loadBtn.addEventListener(\"click\", async () => {\n        setStatus(\"Loading rules…\");\n        if (fileInput?.files?.length) { \n          const ok = await readFile(fileInput.files[0]); \n          if (ok) return; \n        }\n        const picked = await openPickerAndRead();\n        if (!picked) setStatus(\"Please choose rules.json manually.\", \"#c00\");\n      });\n    }\n  } catch (error) {\n    console.error(\"Error binding rules loader:\", error);\n  }\n}\n\nasync function clearMarkers() {\n  try {\n    await Word.run(async (ctx) => {\n      try {\n        const all = ctx.document.contentControls;\n        all.load(\"items/tag\"); \n        await ctx.sync();\n        \n        // Clear highlighting first\n        for (const cc of all.items) {\n          if (!cc.tag || !cc.tag.startsWith(ISSUE_TAG_PREFIX)) continue;\n          try {\n            const r = cc.getRange();\n            r.font.highlightColor = \"NoColor\";\n            (r.font as any).highlightColor = \"None\";\n          } catch (highlightError) {\n            console.warn(\"Error clearing highlight:\", highlightError);\n          }\n        }\n        await ctx.sync();\n\n        // Delete content controls\n        const toDelete = all.items.filter(cc => cc.tag && cc.tag.startsWith(ISSUE_TAG_PREFIX));\n        for (const cc of toDelete) {\n          try {\n            cc.delete(true);\n          } catch (deleteError) {\n            console.warn(\"Error deleting content control:\", deleteError);\n          }\n        }\n        await ctx.sync();\n\n        // Clear any remaining highlights\n        try {\n          const paras = ctx.document.body.paragraphs;\n          paras.load(\"items\"); \n          await ctx.sync();\n          \n          for (const p of paras.items) {\n            try {\n              const r = p.getRange();\n              r.font.highlightColor = \"NoColor\";\n              (r.font as any).highlightColor = \"None\";\n            } catch (paraHighlightError) {\n              console.warn(\"Error clearing paragraph highlight:\", paraHighlightError);\n            }\n          }\n          await ctx.sync();\n\n          const tables = ctx.document.body.tables;\n          tables.load(\"items\"); \n          await ctx.sync();\n          \n          for (const t of tables.items) {\n            try {\n              const r = t.getRange();\n              r.font.highlightColor = \"NoColor\";\n              (r.font as any).highlightColor = \"None\";\n            } catch (tableHighlightError) {\n              console.warn(\"Error clearing table highlight:\", tableHighlightError);\n            }\n          }\n          await ctx.sync();\n\n          const allRange = ctx.document.body.getRange();\n          allRange.font.highlightColor = \"NoColor\";\n          (allRange.font as any).highlightColor = \"None\";\n          await ctx.sync();\n        } catch (globalClearError) {\n          console.warn(\"Error with global highlight clearing:\", globalClearError);\n        }\n      } catch (clearError) {\n        console.error(\"Error in clearMarkers main logic:\", clearError);\n      }\n    });\n  } catch (error) {\n    console.error(\"Critical error in clearMarkers:\", error);\n  }\n}\n\n/* ------------------------------ Scan with Better Error Handling ------------------------------ */\n\nfunction bindScan() {\n  try {\n    const btn = document.getElementById(\"scanBtn\") as HTMLButtonElement | null;\n    const status = document.getElementById(\"scanStatus\") as HTMLElement | null;\n    const list = document.getElementById(\"issuesList\") as HTMLOListElement | null;\n    if (!btn || !status || !list) return;\n\n    btn.addEventListener(\"click\", async () => {\n      try {\n        const rules = getRules();\n        if (!rules) { \n          status.textContent = \"Load a rules JSON first.\"; \n          status.style.color = \"#c00\"; \n          return; \n        }\n\n        status.textContent = \"Scanning…\"; \n        status.style.color = \"#555\"; \n        list.innerHTML = \"\";\n        \n        const issues: Issue[] = [];\n        const aliases: Record<string, string> = rules?.meta?.styleNameAliases || {};\n\n        const indentPolicy: Record<string, number> = rules?.rules?.indentation?.expectedCmByStyle || {};\n        const indentTolCm = Math.max(rules?.rules?.indentation?.toleranceCm ?? 0.03, 0.02);\n\n        const headingAllowedRaw: string[] = (rules?.rules?.styles?.headings?.allowed ?? []) as string[];\n        const HEADING_ALLOWED = new Set(headingAllowedRaw.map(s => normalizeStyle(s, aliases)));\n\n        const capRules = rules?.rules?.styles?.captions || {};\n        const figRule = capRules.figure || {};\n        const tblRule = capRules.table || {};\n        const figAllowed = normalizeStyleList(figRule.style ?? \"TCC 그림 캡션\", aliases);\n        const tblAllowed = normalizeStyleList((tblRule.styles ?? tblRule.style) ?? \"캡션,TCC 표 캡션,표캡션TCC\", aliases);\n        const FIG_LABELS = labelsToArray(figRule.seqLabels, [\"Figure\",\"그림\"]);\n        const TBL_LABELS = labelsToArray(tblRule.seqLabels, [\"Table\",\"표\"]);\n        const requireFigSeq = figRule.requireAutoNumber !== false;\n        const requireTblSeq = tblRule.requireAutoNumber !== false;\n\n        // Clear existing markers first\n        try {\n          await Word.run(async (context) => {\n            const all = context.document.contentControls;\n            all.load(\"items/tag\"); \n            await context.sync();\n            \n            const toDelete = all.items.filter(cc => cc.tag && cc.tag.startsWith(ISSUE_TAG_PREFIX));\n            for (const cc of toDelete) {\n              try {\n                cc.delete(true);\n              } catch (deleteError) {\n                console.warn(\"Error deleting existing marker:\", deleteError);\n              }\n            }\n            await context.sync();\n          });\n        } catch (clearError) {\n          console.warn(\"Error clearing existing markers:\", clearError);\n        }\n\n        // Main scanning logic\n        await Word.run(async (context) => {\n          try {\n            const body = context.document.body;\n\n            let skip = 0;\n            while (true) {\n              try {\n                const paras = body.paragraphs;\n                paras.load({ select: \"style,text,isListItem,leftIndent,firstLineIndent\", top: BATCH_SIZE, skip });\n                await context.sync();\n                \n                if (paras.items.length === 0) break;\n\n                const tocSkip = await computeTocSkips(context, paras);\n\n                for (let i = 0; i < paras.items.length; i++) {\n                  try {\n                    const p = paras.items[i];\n                    if (tocSkip[i]) continue;\n\n                    // Check list compliance\n                    await checkBulletedListCompliance(context, p, rules, aliases, issues);\n\n                    const raw = p.style || \"\";\n                    const std = normalizeStyle(raw, aliases);\n                    const txt = p.text || \"\";\n\n                    // Skip placeholder/empty content\n                    if (txt.includes(\"텍스트를 입력하려면 여기를 클릭하거나 탭하세요\") || \n                        txt.includes(\"Click or tap here to enter text\") ||\n                        txt.includes(\"Type here\") ||\n                        txt.trim() === \"\" ||\n                        /^(\\[.*\\]|\\{.*\\}|\\(.*\\))$/.test(txt.trim())) {\n                      continue;\n                    }\n\n                    // Skip headings\n                    const isHeading =\n                      HEADING_ALLOWED.has(std) ||\n                      /^(heading|제목)\\s*\\d+/.test(std) ||\n                      /^(heading|제목)\\s*\\d+/.test((raw||\"\").toLowerCase());\n                    if (isHeading) continue;\n\n                    // Check indentation\n                    try {\n                      const leftCm  = toCm((p.leftIndent as any) || 0);\n                      const firstCm = toCm((p.firstLineIndent as any) || 0);\n                      const textStart = leftCm + firstCm;\n\n                      const expected = ((): number | undefined => {\n                        if ((indentPolicy as any)[raw]) return indentPolicy[raw];\n                        const n = normalizeStyle(raw, aliases);\n                        if ((indentPolicy as any)[n]) return (indentPolicy as any)[n];\n                        return undefined;\n                      })();\n\n                      if (typeof expected === \"number\") {\n                        const trimmedText = txt.trim();\n                        const listHeuristic =\n                          /^[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0\\-–·•◦○▪□]\\s+/.test(trimmedText) ||\n                          /^(\\(?\\d{1,3}|\\(?[A-Za-z]{1,3}|\\(?[IVXLCM]{1,4})[.)]\\s+/i.test(trimmedText) ||\n                          /^\\d+\\s+/.test(trimmedText);\n                        const isRealList = !!p.isListItem && listHeuristic;\n\n                        if (!isRealList && Math.abs(textStart - expected) > indentTolCm) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag, \n                              kind: \"indent\",\n                              message: \"Indent \" + round2(textStart) + \" cm (expected \" + round2(expected) + \" cm) for style \\\"\" + (raw || std) + \"\\\".\",\n                              fixMeta: { expectedCm: expected }\n                            });\n                          } catch (indentMarkError) {\n                            console.warn(\"Error marking indent issue:\", indentMarkError);\n                          }\n                        }\n                      }\n                    } catch (indentCheckError) {\n                      console.warn(\"Error checking indentation:\", indentCheckError);\n                    }\n                  } catch (paragraphError) {\n                    console.warn(`Error processing paragraph ${i}:`, paragraphError);\n                  }\n                }\n\n                skip += paras.items.length;\n              } catch (batchError) {\n                console.error(`Error processing batch starting at ${skip}:`, batchError);\n                skip += BATCH_SIZE; // Continue with next batch\n                if (skip > 10000) break; // Safety break to avoid infinite loop\n              }\n            }\n\n            // Caption checking\n            let cskip = 0;\n            while (true) {\n              try {\n                const caps = body.paragraphs;\n                caps.load({ select: \"style,text\", top: BATCH_SIZE, skip: cskip });\n                await context.sync();\n                \n                if (caps.items.length === 0) break;\n\n                const tocSkip2 = await computeTocSkips(context, caps);\n\n                for (let i = 0; i < caps.items.length; i++) {\n                  try {\n                    if (tocSkip2[i]) continue;\n\n                    const p   = caps.items[i];\n                    const raw = p.style || \"\";\n                    const std = normalizeStyle(raw, aliases);\n                    const txt = p.text || \"\";\n\n                    // Skip placeholder/empty content\n                    if (txt.includes(\"텍스트를 입력하려면 여기를 클릭하거나 탭하세요\") || \n                        txt.includes(\"Click or tap here to enter text\") ||\n                        txt.includes(\"Type here\") ||\n                        txt.trim() === \"\" ||\n                        /^(\\[.*\\]|\\{.*\\}|\\(.*\\))$/.test(txt.trim())) {\n                      continue;\n                    }\n\n                    const styleIsFig = figAllowed.has(std) || figAllowed.has(raw);\n                    const styleIsTbl = tblAllowed.has(std) || tblAllowed.has(raw);\n\n                    const looksFig = looksLikeCaptionText(txt, FIG_LABELS);\n                    const looksTbl = looksLikeCaptionText(txt, TBL_LABELS);\n\n                    const needFigCheck = styleIsFig || looksFig;\n                    const needTblCheck = styleIsTbl || looksTbl;\n                    if (!needFigCheck && !needTblCheck) continue;\n\n                    let figOK = false, tblOK = false;\n                    if (needFigCheck) { \n                      try { \n                        figOK = await hasChapterSeqForLabelRobust(context, p, \"Figure\"); \n                      } catch (figCheckError) {\n                        console.warn(\"Error checking figure fields:\", figCheckError);\n                      }\n                    }\n                    if (needTblCheck) { \n                      try { \n                        tblOK = await hasChapterSeqForLabelRobust(context, p, \"Table\"); \n                      } catch (tblCheckError) {\n                        console.warn(\"Error checking table fields:\", tblCheckError);\n                      }\n                    }\n\n                    // Figure caption checks\n                    if (styleIsFig) {\n                      if (!figOK && requireFigSeq) {\n                        try {\n                          const tag = await markParagraph(context, p);\n                          issues.push({ \n                            tag, \n                            kind: \"figure-style\", \n                            message: \"Figure caption uses manual numbering. Expected { STYLEREF 1 \\\\s }.{ SEQ Figure \\\\* ARABIC \\\\s 1 }\" \n                          });\n                        } catch (figMarkError) {\n                          console.warn(\"Error marking figure issue:\", figMarkError);\n                        }\n                      } else if (figOK) {\n                        const rest = descriptionAfterNumber(txt, FIG_LABELS);\n                        if (!rest) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({ \n                              tag, \n                              kind: \"figure-empty\", \n                              message: \"Figure caption is empty.\" \n                            });\n                          } catch (figEmptyMarkError) {\n                            console.warn(\"Error marking empty figure:\", figEmptyMarkError);\n                          }\n                        }\n                      }\n                    } else if (looksFig) {\n                      if (!figOK) {\n                        if (!hasRealSentenceAfterNumber(txt, FIG_LABELS)) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag,\n                              kind: \"figure-style\",\n                              message: \"Figure-like text uses neither automatic numbering nor the correct caption style.\"\n                            });\n                          } catch (figStyleMarkError) {\n                            console.warn(\"Error marking figure style issue:\", figStyleMarkError);\n                          }\n                        }\n                      } else {\n                        try {\n                          const tag = await markParagraph(context, p);\n                          issues.push({\n                            tag,\n                            kind: \"figure-style\",\n                            message: \"Figure caption uses the wrong style. Apply the designated figure caption style.\"\n                          });\n                        } catch (figWrongStyleMarkError) {\n                          console.warn(\"Error marking figure wrong style:\", figWrongStyleMarkError);\n                        }\n                      }\n                    }\n\n                    // Table caption checks\n                    if (styleIsTbl) {\n                      if (!tblOK && requireTblSeq) {\n                        try {\n                          const tag = await markParagraph(context, p);\n                          issues.push({ \n                            tag, \n                            kind: \"table-style\", \n                            message: \"Table caption uses manual numbering. Expected { STYLEREF 1 \\\\s }.{ SEQ Table \\\\* ARABIC \\\\s 1 }\" \n                          });\n                        } catch (tblMarkError) {\n                          console.warn(\"Error marking table issue:\", tblMarkError);\n                        }\n                      } else if (tblOK) {\n                        const rest = descriptionAfterNumber(txt, TBL_LABELS);\n                        if (!rest) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({ \n                              tag, \n                              kind: \"table-empty\", \n                              message: \"Table caption is empty.\" \n                            });\n                          } catch (tblEmptyMarkError) {\n                            console.warn(\"Error marking empty table:\", tblEmptyMarkError);\n                          }\n                        }\n                      }\n                    } else if (looksTbl) {\n                      if (!tblOK) {\n                        if (!hasRealSentenceAfterNumber(txt, TBL_LABELS)) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag,\n                              kind: \"table-style\",\n                              message: \"Table-like text uses neither automatic numbering nor the correct caption style.\"\n                            });\n                          } catch (tblStyleMarkError) {\n                            console.warn(\"Error marking table style issue:\", tblStyleMarkError);\n                          }\n                        }\n                      } else {\n                        if (!styleIsTbl) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag,\n                              kind: \"table-style\",\n                              message: \"Table caption uses the wrong style. Apply the designated table caption style.\"\n                            });\n                          } catch (tblWrongStyleMarkError) {\n                            console.warn(\"Error marking table wrong style:\", tblWrongStyleMarkError);\n                          }\n                        }\n                      }\n                    }\n                  } catch (captionError) {\n                    console.warn(`Error processing caption ${i}:`, captionError);\n                  }\n                }\n\n                cskip += caps.items.length;\n              } catch (captionBatchError) {\n                console.error(`Error processing caption batch starting at ${cskip}:`, captionBatchError);\n                cskip += BATCH_SIZE;\n                if (cskip > 10000) break;\n              }\n            }\n          } catch (scanError) {\n            console.error(\"Error in main scan logic:\", scanError);\n            status.textContent = \"Scan failed with error: \" + scanError.message;\n            status.style.color = \"#c00\";\n            return;\n          }\n        });\n\n        (window as any).__SGC_ISSUES__ = issues;\n        renderIssues(issues);\n\n        if (issues.length === 0) { \n          status.textContent = \"Scan complete. No issues found.\"; \n          status.style.color = \"#0a0\"; \n        } else { \n          status.textContent = \"Scan complete. Found \" + issues.length + \" issue(s).\"; \n          status.style.color = \"#a60\"; \n        }\n      } catch (error) {\n        console.error(\"Critical error in scan:\", error);\n        status.textContent = \"Scan failed: \" + error.message;\n        status.style.color = \"#c00\";\n      }\n    });\n  } catch (error) {\n    console.error(\"Error binding scan:\", error);\n  }\n}\n\n/* ------------------------------ Issue List / Actions with Error Handling ------------------------------ */\n\nfunction renderIssues(issues: Issue[]) {\n  try {\n    const list = document.getElementById(\"issuesList\") as HTMLOListElement | null;\n    if (!list) return;\n    list.innerHTML = \"\";\n\n    const noFixKinds = new Set<IssueKind>([\"figure-style\", \"table-style\"]);\n\n    for (const it of issues) {\n      try {\n        const li = document.createElement(\"li\");\n        li.className = \"issue\";\n        li.dataset.tag = it.tag;\n        (li.style as any).cursor = \"pointer\";\n\n        const msg = document.createElement(\"div\");\n        msg.textContent = \"[\" + it.kind + \"] \" + it.message;\n        li.appendChild(msg);\n\n        if (!noFixKinds.has(it.kind)) {\n          const fix = document.createElement(\"button\");\n          fix.textContent = \"Fix\";\n          fix.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            fixIssue(it).catch(err => {\n              console.error(\"Error fixing issue:\", err);\n              // Could show user feedback here\n            });\n          });\n          li.appendChild(fix);\n        }\n\n        list.appendChild(li);\n      } catch (itemError) {\n        console.warn(\"Error rendering issue item:\", itemError);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error rendering issues:\", error);\n  }\n}\n\nfunction bindIssueRowClicks() {\n  try {\n    const list = document.getElementById(\"issuesList\");\n    if (!list) return;\n    \n    list.addEventListener(\"click\", (e) => {\n      try {\n        const row = (e.target as HTMLElement).closest(\"li.issue\") as HTMLLIElement | null;\n        if (!row) return;\n        const tag = row.dataset.tag;\n        if (!tag) return;\n        jumpToIssue(tag).catch(err => {\n          console.error(\"Error jumping to issue:\", err);\n        });\n      } catch (error) {\n        console.warn(\"Error handling issue row click:\", error);\n      }\n    });\n  } catch (error) {\n    console.error(\"Error binding issue row clicks:\", error);\n  }\n}\n\nasync function jumpToIssue(tag: string) {\n  try {\n    await Word.run(async (ctx) => {\n      try {\n        const controls = ctx.document.contentControls.getByTag(ISSUE_TAG_PREFIX + tag);\n        controls.load(\"items\"); \n        await ctx.sync();\n        \n        if (controls.items.length > 0) { \n          controls.items[0].select(); \n          await ctx.sync(); \n        }\n      } catch (jumpError) {\n        console.warn(\"Error jumping to specific issue:\", jumpError);\n      }\n    });\n  } catch (error) {\n    console.error(\"Critical error jumping to issue:\", error);\n  }\n}\n\n/* ------------------------------ Fix Logic with Error Handling ------------------------------ */\n\nasync function fixIssue(it: Issue) {\n  try {\n    const rules = getRules() || {};\n    const aliases: Record<string, string> = rules?.meta?.styleNameAliases || {};\n    const bulletRule = rules?.rules?.styles?.bullets ?? {};\n    const numberedRule = rules?.rules?.styles?.numberedLists ?? {};\n    \n    const allowedBulletNames: string[] = (bulletRule.allowed ?? [\"TCC 글머리1\",\"TCC 글머리2\",\"TCC 글머리3\",\"TCC 글머리4\"]);\n    const allowedNumberedNames: string[] = (numberedRule.allowed ?? [\"TCC 번호1\",\"TCC 번호2\",\"TCC 번호3\"]);\n    \n    const indentPolicy: Record<string, number> = rules?.rules?.indentation?.expectedCmByStyle || {};\n    const allowedBulletIndentsCm: number[] = (bulletRule.allowedIndentsCm ?? [0.71,1.21,1.71,2.21]);\n    const allowedNumberedIndentsCm: number[] = (numberedRule.allowedIndentsCm ?? [0.71,1.21,1.71]);\n\n    const capRules = rules?.rules?.styles?.captions || {};\n    const figRule = capRules.figure || {};\n    const tblRule = capRules.table || {};\n    const figStyle = Array.isArray(figRule.style) ? figRule.style[0] : (figRule.style || \"TCC 그림 캡션\");\n    const tblStyles = (tblRule.styles || tblRule.style || \"캡션,TCC 표 캡션,표캡션TCC\");\n    const tblStyle = Array.isArray(tblStyles) ? tblStyles[0] : tblStyles;\n\n    await Word.run(async (ctx) => {\n      try {\n        const controls = ctx.document.contentControls.getByTag(ISSUE_TAG_PREFIX + it.tag);\n        controls.load(\"items\"); \n        await ctx.sync();\n        \n        if (controls.items.length === 0) return;\n        \n        const cc = controls.items[0];\n        const para = cc.getRange().paragraphs.getFirst();\n        para.load([\"style\",\"isListItem\",\"leftIndent\",\"firstLineIndent\",\"text\"]); \n        await ctx.sync();\n\n        switch (it.kind) {\n          case \"bullet-style\": {\n            try {\n              const fixMeta = it.fixMeta || {};\n              const allowedStyles = fixMeta.allowedStyles || allowedBulletNames;\n              const allowedIndents = fixMeta.allowedIndents || allowedBulletIndentsCm;\n              const currentIndent = fixMeta.currentIndent || 0;\n              \n              let bestMatch = 0;\n              let minDistance = Math.abs(currentIndent - allowedIndents[0]);\n              \n              for (let i = 1; i < allowedIndents.length; i++) {\n                const distance = Math.abs(currentIndent - allowedIndents[i]);\n                if (distance < minDistance) {\n                  minDistance = distance;\n                  bestMatch = i;\n                }\n              }\n              \n              const targetStyle = allowedStyles[bestMatch];\n              const targetIndent = allowedIndents[bestMatch];\n              \n              para.style = targetStyle;\n              (para as any).leftIndent = toPt(targetIndent);\n              (para as any).firstLineIndent = 0;\n              \n              await ctx.sync();\n              console.log(`[FIX] Applied ${targetStyle} with ${targetIndent}cm indent`);\n            } catch (bulletFixError) {\n              console.error(\"Error fixing bullet style:\", bulletFixError);\n            }\n            break;\n          }\n          case \"numbered-style\": {\n            try {\n              const fixMeta = it.fixMeta || {};\n              const allowedStyles = fixMeta.allowedStyles || allowedNumberedNames;\n              const allowedIndents = fixMeta.allowedIndents || allowedNumberedIndentsCm;\n              const currentIndent = fixMeta.currentIndent || 0;\n              \n              let bestMatch = 0;\n              let minDistance = Math.abs(currentIndent - allowedIndents[0]);\n              \n              for (let i = 1; i < allowedIndents.length; i++) {\n                const distance = Math.abs(currentIndent - allowedIndents[i]);\n                if (distance < minDistance) {\n                  minDistance = distance;\n                  bestMatch = i;\n                }\n              }\n              \n              const targetStyle = allowedStyles[bestMatch];\n              const targetIndent = allowedIndents[bestMatch];\n              \n              para.style = targetStyle;\n              (para as any).leftIndent = toPt(targetIndent);\n              (para as any).firstLineIndent = 0;\n              \n              await ctx.sync();\n              console.log(`[FIX] Applied ${targetStyle} with ${targetIndent}cm indent`);\n            } catch (numberedFixError) {\n              console.error(\"Error fixing numbered style:\", numberedFixError);\n            }\n            break;\n          }\n          case \"indent\": {\n            try {\n              const expectedCm: number = it.fixMeta?.expectedCm ?? (() => {\n                const raw = para.style || \"\";\n                if (raw in indentPolicy) return indentPolicy[raw];\n                const n = normalizeStyle(raw, aliases);\n                if (n in indentPolicy) return indentPolicy[n];\n                const txt = para.text || \"\";\n                const isBulletType = /^[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□\\-–—]\\s+/.test(txt.trim());\n                return isBulletType ? allowedBulletIndentsCm[0] : allowedNumberedIndentsCm[0];\n              })();\n              const curFirst = toCm((para.firstLineIndent as any) || 0);\n              const newLeft = expectedCm - curFirst;\n              (para as any).leftIndent = toPt(newLeft);\n              await ctx.sync();\n            } catch (indentFixError) {\n              console.error(\"Error fixing indent:\", indentFixError);\n            }\n            break;\n          }\n          case \"figure-empty\": {\n            try {\n              para.style = figStyle; \n              await ctx.sync();\n              para.select(\"End\"); \n              await ctx.sync();\n            } catch (figEmptyFixError) {\n              console.error(\"Error fixing empty figure:\", figEmptyFixError);\n            }\n            break;\n          }\n          case \"table-empty\": {\n            try {\n              para.style = tblStyle; \n              await ctx.sync();\n              para.select(\"End\"); \n              await ctx.sync();\n            } catch (tblEmptyFixError) {\n              console.error(\"Error fixing empty table:\", tblEmptyFixError);\n            }\n            break;\n          }\n        }\n\n        try {\n          cc.delete(true);\n          await ctx.sync();\n        } catch (deleteError) {\n          console.warn(\"Error deleting content control after fix:\", deleteError);\n        }\n      } catch (fixRunError) {\n        console.error(\"Error in Word.run for fix:\", fixRunError);\n      }\n    });\n  } catch (error) {\n    console.error(\"Critical error in fixIssue:\", error);\n    throw error; // Re-throw so caller can handle\n  }\n}","// Module\nvar code = \"<!DOCTYPE html>\\n<html>\\n<head>\\n    <meta charset=\\\"UTF-8\\\" />\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\" />\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n    <title>Style Guide Checker</title>\\n\\n    <!-- Office JavaScript API -->\\n    <\" + \"script type=\\\"text/javascript\\\" src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script>\\n\\n    <!-- Fluent UI -->\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/>\\n\\n    <style>\\n        body {\\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n            margin: 0;\\n            padding: 12px;\\n            background: #ffffff;\\n            color: #333;\\n        }\\n\\n        main {\\n            display: flex;\\n            flex-direction: column;\\n            width: 100%;\\n        }\\n\\n        h3 {\\n            font-size: 14px;\\n            margin: 0 0 8px 0;\\n            color: #333;\\n        }\\n\\n        .section {\\n            padding: 12px;\\n            border: 1px solid #ddd;\\n            border-radius: 6px;\\n            margin-bottom: 12px;\\n            background: #fff;\\n            width: 100%;\\n            box-sizing: border-box;\\n        }\\n\\n        button {\\n            background: #0078d4;\\n            color: white;\\n            border: none;\\n            padding: 8px 16px;\\n            border-radius: 3px;\\n            cursor: pointer;\\n            font-size: 13px;\\n            margin-right: 8px;\\n            margin-bottom: 8px;\\n        }\\n\\n        button:hover {\\n            background: #106ebe;\\n        }\\n\\n        .secondary {\\n            background: #6c757d;\\n        }\\n\\n        .secondary:hover {\\n            background: #545b62;\\n        }\\n\\n        input[type=\\\"file\\\"] {\\n            margin-bottom: 8px;\\n            font-size: 13px;\\n        }\\n\\n        .status {\\n            margin-top: 8px;\\n            padding: 8px;\\n            border-radius: 3px;\\n            font-size: 12px;\\n        }\\n\\n        .status-success {\\n            background: #d4edda;\\n            color: #155724;\\n            border: 1px solid #c3e6cb;\\n        }\\n\\n        .status-error {\\n            background: #f8d7da;\\n            color: #721c24;\\n            border: 1px solid #f5c6cb;\\n        }\\n\\n        .status-info {\\n            background: #d1ecf1;\\n            color: #0c5460;\\n            border: 1px solid #bee5eb;\\n        }\\n\\n        .preview-box {\\n            max-height: 200px;\\n            overflow: auto;\\n            background: #f8f9fa;\\n            border: 1px solid #dee2e6;\\n            border-radius: 3px;\\n            padding: 8px;\\n            font-family: 'Consolas', 'Monaco', monospace;\\n            font-size: 11px;\\n            white-space: pre-wrap;\\n            word-break: break-word;\\n            margin-top: 8px;\\n            display: none;\\n        }\\n\\n        .issues-list {\\n            list-style: decimal;\\n            padding: 0 0 0 20px;\\n            margin: 8px 0 0 0;\\n        }\\n\\n        .issue-item {\\n            background: #f8f9fa;\\n            border-left: 3px solid #dc3545;\\n            padding: 8px;\\n            margin-bottom: 8px;\\n            cursor: pointer;\\n            font-size: 12px;\\n            line-height: 1.4;\\n            position: relative;\\n            border-radius: 3px;\\n            list-style-type: decimal;\\n        }\\n\\n        .issue-item:hover {\\n            background: #e9ecef;\\n        }\\n\\n        .issue-type {\\n            font-weight: bold;\\n            color: #dc3545;\\n            font-size: 11px;\\n            text-transform: uppercase;\\n        }\\n\\n        .fix-btn {\\n            position: absolute;\\n            right: 8px;\\n            top: 8px;\\n            background: #28a745;\\n            color: white;\\n            border: none;\\n            padding: 4px 8px;\\n            border-radius: 3px;\\n            font-size: 10px;\\n            margin: 0;\\n        }\\n\\n        .fix-btn:hover {\\n            background: #218838;\\n        }\\n\\n        .hidden {\\n            display: none;\\n        }\\n    </style>\\n</head>\\n\\n<body class=\\\"ms-font-m ms-Fabric\\\">\\n    <section id=\\\"sideload-msg\\\" class=\\\"hidden\\\">\\n        <h2>Please sideload your add-in to see app body.</h2>\\n    </section>\\n\\n    <main id=\\\"app-body\\\">\\n        <section class=\\\"section\\\">\\n            <h2 style=\\\"font-size: 18px; margin: 0 0 8px 0;\\\">Welcome to Style Guide Checker</h2>\\n            <p style=\\\"margin: 0; color: #666; font-size: 12px; line-height: 1.4;\\\">\\n                Load your style rules and scan your document to ensure consistent formatting and style compliance.\\n            </p>\\n        </section>\\n\\n        <section class=\\\"section\\\">\\n            <h3>Load Style Guide Rules</h3>\\n            <input type=\\\"file\\\" id=\\\"rulesFileInput\\\" accept=\\\".json,application/json\\\" style=\\\"display: none;\\\">\\n            <button type=\\\"button\\\" id=\\\"chooseFileBtn\\\" onclick=\\\"document.getElementById('rulesFileInput').click()\\\">Choose File</button>\\n            <br>\\n            <div id=\\\"rulesStatus\\\"></div>\\n            <div id=\\\"rulesPreview\\\" class=\\\"preview-box\\\"></div>\\n        </section>\\n\\n        <section class=\\\"section\\\">\\n            <h3>Scan Document</h3>\\n            <button id=\\\"scanBtn\\\" type=\\\"button\\\">Scan</button>\\n            <div id=\\\"scanStatus\\\"></div>\\n            <ol id=\\\"issuesList\\\" class=\\\"issues-list\\\"></ol>\\n        </section>\\n    </main>\\n</body>\\n</html>\";\n// Exports\nexport default code;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","push","Office","onReady","info","_document$getElementB","_document$getElementB2","host","HostType","Word","document","getElementById","setAttribute","bindRulesLoader","bindScan","bindIssueRowClicks","clearBtn","addEventListener","clearMarkers","catch","console","error","ISSUE_TAG_PREFIX","POINTS_PER_CM","toCm","pt","toPt","cm","round2","Math","round","BATCH_SIZE","getRules","window","styleGuideRules","setRules","obj","normalizeStyle","aliases","raw","trim","base","replace","toLowerCase","_i","_Object$entries","entries","_Object$entries$_i","k","kk","warn","normalizeStyleList","input","arr","set","Set","_iterator","_step","add","err","has","_unused","labelsToArray","fallback","_unused2","__issueCounter","newIssueTag","String","padStart","markParagraph","_x","_x2","_markParagraph","_callee9","ctx","tag","cc","_t21","_context0","getRange","insertContentControl","title","appearance","sync","isTocStyleName","rawOrStd","includes","_unused3","isLikelyTocText","text","reLeaderTabPage","reLongLeaderNumber","reSpacesNumber","reTabNumber","reMultipleSpacesNumber","reChapterPattern","_unused4","computeTocSkips","_x3","_x4","_computeTocSkips","_callee0","paras","skip","fields","_i3","_arr","_load","_ref0","_i4","_arr2","_f","_code","code","_getRange","_ref1","tocRange","tocParas","_iterator4","_step4","_loop3","_paras$items","_t22","_t23","_t24","_t25","_t26","_context10","items","fill","forEach","style","txt","concat","body","load","fieldError","paragraphs","tp","_context1","tocParaError","_regeneratorValues","checkBulletedListCompliance","_x5","_x6","_x7","_x8","_x9","_checkBulletedListCompliance","_callee1","paragraph","rules","issues","_rules$rules$styles$b","_rules$rules5","_rules$rules$styles$n","_rules$rules6","_bulletRule$allowed","_numberedRule$allowed","_bulletRule$allowedIn","_numberedRule$allowed2","_rules$rules7","_rules$rules$indentat2","_rules$rules8","_rules$rules$styles$h2","_rules$rules9","std","bulletRule","numberedRule","allowedBulletNames","allowedNumberedNames","allowedBulletIndentsCm","allowedNumberedIndentsCm","allAllowedListNames","allAllowedIndents","allowedListStyles","indentPolicy","indentTolCm","headingAllowedRaw","HEADING_ALLOWED","isHeading","trimmedText","looksLikeHeading","listHeuristics","hasVisualListMarkers","isAnyKindOfList","isRealList","hasWrongStyleList","isBulletType","isNumberedType","leftCm","firstCm","currentIndent","hasCorrectListStyle","allowedStylesDisplay","issueKind","fixMeta","textStartIndent","expectedIndent","normalizedStyle","indentDifference","_tag8","allowedIndentsCm","nearestAllowedIndent","tierTolerance","_tag9","allowedIndentsDisplay","_t27","_t28","_t29","_t30","_t31","_context11","log","substring","styles","bullets","numberedLists","allowed","_toConsumableArray","styleName","indentation","expectedCmByStyle","max","toleranceCm","headings","map","hasBulletChar","hasDashBullet","hasNumbering","hasLettering","hasRoman","isWordList","isListItem","hasTabBullet","hasSpaceBullet","leftIndent","firstLineIndent","join","allowedStyles","allowedIndents","kind","message","undefined","abs","expectedCm","reduce","best","distance","Number","POSITIVE_INFINITY","tailAfterLabelNumber","labels","labelAlt","re","RegExp","exec","_unused5","hasRealSentenceAfterNumber","tail","firstWord","charAt","determiners","earlyVerbs","explanatoryPatterns","conjunctions","firstEight","split","_unused6","joinLabelsToWordBoundary","_unused7","looksLikeCaptionText","_unused8","descriptionAfterNumber","head","_unused9","hasChapterSeqForLabelRobust","_x0","_x1","_x10","_hasChapterSeqForLabelRobust","_callee10","label","fieldPromises","hasStyle","hasSeq","hasArabic","hasReset","reSeq","_i5","_arr3","_f$code","oox","xml","hasFldSimpleStyle","hasFldSimpleSeq","parts","reInstr","joined","_hasStyle","_hasSeq","_hasArabic","_hasReset","_t32","_t33","_t34","_context12","_load2","_ref10","_unused1","filter","Boolean","getOoxml","lastIndex","index","stripManualPrefix","trimStart","_unused0","prependLabelChapterSeqPrefix","range","L","runs","insertOoxml","InsertLocation","start","renderRulesPreview","box","statusEl","createElement","id","st","whiteSpace","wordBreak","marginTop","padding","border","borderRadius","background","maxHeight","overflow","parentElement","appendChild","pretty","JSON","stringify","MAX","textContent","readFile","_ref","_callee","json","_t","_context","parse","applyRules","setStatus","_x11","openPickerAndRead","_ref3","_callee4","_context4","fileInput","handler","_ref4","_callee3","_t2","_t3","_context3","removeEventListener","files","once","click","loadBtn","msg","color","accept","_callee2","_context2","_callee5","_fileInput$files","ok","picked","_context5","_clearMarkers","_callee12","_t38","_context14","run","_ref11","_callee11","all","_iterator5","_step5","_r2","toDelete","_iterator6","_step6","_cc","_iterator7","_step7","tables","_iterator8","_step8","_r","allRange","_t35","_t36","_t37","_context13","contentControls","startsWith","font","highlightColor","highlightError","delete","deleteError","paraHighlightError","tableHighlightError","_x16","btn","status","list","_callee8","_rules$meta","_rules$rules","_rules$rules$indentat","_rules$rules2","_rules$rules$styles$h","_rules$rules3","_rules$rules4","_figRule$style","_ref7","_tblRule$styles","capRules","figRule","tblRule","figAllowed","tblAllowed","FIG_LABELS","TBL_LABELS","requireFigSeq","requireTblSeq","_t19","_t20","_context9","innerHTML","meta","styleNameAliases","captions","figure","table","seqLabels","requireAutoNumber","_ref8","_callee6","context","_iterator2","_step2","_context6","_x12","_ref9","_callee7","tocSkip","_loop","_ret","cskip","caps","tocSkip2","_i2","styleIsFig","styleIsTbl","looksFig","looksTbl","needFigCheck","needTblCheck","figOK","tblOK","rest","_tag","_tag2","_tag3","_tag4","_rest","_tag5","_tag6","_tag7","_t7","_t8","_t9","_t0","_t1","_t10","_t11","_t12","_t13","_t14","_t15","_t16","_t17","_t18","_context8","select","top","textStart","expected","listHeuristic","_t4","_t5","_t6","_context7","_x13","__SGC_ISSUES__","renderIssues","noFixKinds","_iterator3","_step3","_loop2","it","li","className","dataset","cursor","fix","stopPropagation","fixIssue","itemError","row","target","closest","jumpToIssue","_x14","_jumpToIssue","_callee14","_t40","_context16","_ref12","_callee13","controls","_t39","_context15","getByTag","_x17","_x15","_fixIssue","_callee16","_rules$meta2","_rules$rules$styles$b2","_rules$rules0","_rules$rules$styles$n2","_rules$rules1","_bulletRule$allowed2","_numberedRule$allowed3","_rules$rules10","_bulletRule$allowedIn2","_numberedRule$allowed4","_rules$rules11","figStyle","tblStyles","tblStyle","_t49","_context18","_ref13","_callee15","para","bestMatch","minDistance","targetStyle","targetIndent","_fixMeta","_allowedStyles","_allowedIndents","_currentIndent","_bestMatch","_minDistance","_i6","_distance","_targetStyle","_targetIndent","_it$fixMeta$expectedC","_it$fixMeta","curFirst","newLeft","_t41","_t42","_t43","_t44","_t45","_t46","_t47","_t48","_context17","getFirst","_x18"],"sourceRoot":""}