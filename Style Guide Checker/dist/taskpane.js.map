{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["/* global document, Office, Word */\n\n/* ==========================================================\n * Style Guide Checker - taskpane.ts  (Fixed version with better error handling)\n *  - Added comprehensive error handling\n *  - Fixed content control operations\n *  - Improved field access patterns\n *  - Better batch processing\n * ========================================================== */\n\nOffice.onReady((info) => {\n  if (info.host !== Office.HostType.Word) return;\n\n  document.getElementById(\"sideload-msg\")?.setAttribute(\"style\", \"display:none\");\n  document.getElementById(\"app-body\")?.setAttribute(\"style\", \"display:flex\");\n\n  bindRulesLoader();\n  bindScan();\n  bindIssueRowClicks();\n\n  const clearBtn =\n    (document.getElementById(\"clearMarkersBtn\") as HTMLButtonElement | null) ||\n    (document.getElementById(\"clearMarkers\") as HTMLButtonElement | null);\n  clearBtn?.addEventListener(\"click\", () => clearMarkers().catch(console.error));\n});\n\n/* ---------------------------- Types/Consts ---------------------------- */\n\ntype IssueKind =\n  | \"indent\"\n  | \"bullet-style\"\n  | \"numbered-style\"\n  | \"figure-empty\"\n  | \"figure-style\"\n  | \"table-empty\"\n  | \"table-style\";\n\ntype Issue = { tag: string; kind: IssueKind; message: string; fixMeta?: any };\n\nconst ISSUE_TAG_PREFIX = \"sgc-\";\nconst POINTS_PER_CM = 28.3464567;\nconst toCm = (pt: number) => (pt || 0) / POINTS_PER_CM;\nconst toPt = (cm: number) => (cm || 0) * POINTS_PER_CM;\nconst round2 = (v: number) => Math.round(v * 100) / 100;\n\nconst BATCH_SIZE = 500; // Reduced batch size for better stability\n\n/* ------------------------------ Globals ------------------------------ */\n\nfunction getRules(): any { return (window as any).styleGuideRules; }\nfunction setRules(obj: any) { (window as any).styleGuideRules = obj; }\n\n/* ------------------------------ Utilities with Error Handling ------------------------------ */\n\nfunction normalizeStyle(name: string, aliases?: Record<string, string>) {\n  try {\n    const raw = (name || \"\").toString().trim();\n    const base = raw.replace(/\\s+/g, \" \").toLowerCase();\n    if (!aliases) return base;\n    for (const [k, v] of Object.entries(aliases)) {\n      const kk = (k || \"\").toString().trim().replace(/\\s+/g, \" \").toLowerCase();\n      if (kk === base) return (v || \"\").toString().trim().replace(/\\s+/g, \" \").toLowerCase();\n    }\n    return base;\n  } catch (error) {\n    console.warn(\"Error normalizing style:\", error);\n    return (name || \"\").toString().trim().toLowerCase();\n  }\n}\n\nfunction normalizeStyleList(input: string | string[], aliases?: Record<string, string>) {\n  try {\n    const arr = Array.isArray(input) ? input : [input];\n    const set = new Set<string>();\n    for (const n of arr) { \n      set.add(n); \n      set.add(normalizeStyle(n, aliases)); \n    }\n    return { \n      set, \n      has: (raw: string) => {\n        try {\n          return set.has(raw) || set.has(normalizeStyle(raw, aliases));\n        } catch {\n          return false;\n        }\n      }\n    };\n  } catch (error) {\n    console.warn(\"Error creating normalized style list:\", error);\n    return { set: new Set<string>(), has: () => false };\n  }\n}\n\nfunction labelsToArray(v: any, fallback: string[]) {\n  try {\n    if (Array.isArray(v)) return v;\n    if (typeof v === \"string\" && v.trim()) return [v.trim()];\n    return fallback;\n  } catch {\n    return fallback;\n  }\n}\n\nlet __issueCounter = 0;\nfunction newIssueTag() { __issueCounter += 1; return String(__issueCounter).padStart(6, \"0\"); }\n\n/* Marker: hidden content control with better error handling */\nasync function markParagraph(ctx: Word.RequestContext, p: Word.Paragraph): Promise<string> {\n  try {\n    const tag = newIssueTag();\n    const r = p.getRange();\n    const cc = r.insertContentControl();\n    cc.tag = ISSUE_TAG_PREFIX + tag;\n    cc.title = \"Style Guide Issue\";\n    cc.appearance = \"Hidden\";\n    \n    // Ensure sync happens immediately for content control creation\n    await ctx.sync();\n    return tag;\n  } catch (error) {\n    console.error(\"Error marking paragraph:\", error);\n    // Return a fallback tag even if marking fails\n    return newIssueTag();\n  }\n}\n\n/* ------------------------------ Enhanced TOC Skip ------------------------------ */\n\nfunction isTocStyleName(rawOrStd: string): boolean {\n  try {\n    const s = (rawOrStd || \"\").toString().trim().toLowerCase();\n    return /^toc(\\s*\\d+)?$/.test(s) || \n           s === \"toc heading\" || \n           s === \"목차\" || \n           /목차\\s*\\d+/.test(s) ||\n           s === \"table of contents\" ||\n           /^contents(\\s*\\d+)?$/.test(s) ||\n           /^차례(\\s*\\d+)?$/.test(s) ||\n           s === \"차례\" ||\n           s.includes(\"table of contents\") ||\n           s.includes(\"목차\");\n  } catch {\n    return false;\n  }\n}\n\nfunction isLikelyTocText(text: string): boolean {\n  try {\n    const t = (text || \"\").replace(/\\u00A0/g, \" \").trim();\n    const reLeaderTabPage = /[.\\u2026\\u00B7\\u2219]{3,}\\s*\\t+\\s*\\d+$/;\n    const reLongLeaderNumber = /[.\\u2026\\u00B7\\u2219]{5,}\\s*\\d+$/;\n    const reSpacesNumber = /[.\\u2026\\u00B7\\u2219]{3,}\\s{2,}\\d+$/;\n    const reTabNumber = /\\t+\\s*\\d+$/;\n    const reMultipleSpacesNumber = /\\s{3,}\\d+$/;\n    const reChapterPattern = /\\d+\\.\\d+.*[\\.\\u2026\\u00B7\\u2219]{2,}.*\\d+$/;\n    \n    return reLeaderTabPage.test(t) || \n           reLongLeaderNumber.test(t) || \n           reSpacesNumber.test(t) ||\n           reTabNumber.test(t) ||\n           reMultipleSpacesNumber.test(t) ||\n           reChapterPattern.test(t);\n  } catch {\n    return false;\n  }\n}\n\nasync function computeTocSkips(ctx: Word.RequestContext, paras: Word.ParagraphCollection): Promise<boolean[]> {\n  try {\n    const skip: boolean[] = new Array(paras.items.length).fill(false);\n\n    // Enhanced style/text checks\n    paras.items.forEach((p, i) => {\n      try {\n        const raw = (p.style || \"\").toLowerCase();\n        const txt = (p.text || \"\").trim();\n\n        if (isTocStyleName(raw) || isLikelyTocText(txt)) {\n          skip[i] = true;\n          return;\n        }\n\n        if (txt.toLowerCase().includes(\"table of contents\") ||\n            txt.toLowerCase().includes(\"목차\") ||\n            txt.toLowerCase().includes(\"차례\")) {\n          skip[i] = true;\n        }\n      } catch (error) {\n        console.warn(`Error checking TOC for paragraph ${i}:`, error);\n        // If there's an error, don't skip by default\n      }\n    });\n\n    // Field-based TOC detection with comprehensive error handling\n    try {\n      const fields = ctx.document.body.getRange().fields;\n      fields.load(\"items\");\n      await ctx.sync();\n\n      if (fields.items && fields.items.length > 0) {\n        for (const f of fields.items as any[]) {\n          try {\n            (f as any).load?.(\"code\");\n          } catch (fieldError) {\n            console.warn(\"Error loading field code:\", fieldError);\n          }\n        }\n        \n        try {\n          await ctx.sync();\n        } catch (syncError) {\n          console.warn(\"Error syncing field codes:\", syncError);\n          return skip; // Return what we have from style/text checks\n        }\n\n        for (const f of fields.items as any[]) {\n          try {\n            const code = String((f as any)?.code ?? \"\");\n            if (/^\\s*TOC\\b/i.test(code)) {\n              const tocRange = (f as any).getRange?.();\n              if (tocRange) {\n                const tocParas = tocRange.paragraphs;\n                tocParas.load(\"items\");\n                await ctx.sync();\n                \n                for (const tp of tocParas.items) {\n                  try {\n                    const text = tp.text;\n                    const style = tp.style;\n                    paras.items.forEach((p, i) => {\n                      if (p.text === text && p.style === style) {\n                        skip[i] = true;\n                      }\n                    });\n                  } catch (tocParaError) {\n                    console.warn(\"Error processing TOC paragraph:\", tocParaError);\n                  }\n                }\n              }\n            }\n          } catch (fieldProcessError) {\n            console.warn(\"Error processing individual field:\", fieldProcessError);\n          }\n        }\n      }\n    } catch (fieldsError) {\n      console.warn(\"Error with field-based TOC detection:\", fieldsError);\n      // Continue with style/text-based detection only\n    }\n\n    return skip;\n  } catch (error) {\n    console.error(\"Critical error in computeTocSkips:\", error);\n    // Return safe default - don't skip any paragraphs if we can't determine\n    return new Array(paras.items?.length || 0).fill(false);\n  }\n}\n\n/* ------------------------------ Enhanced List Checker (Bullets + Numbered) ------------------------------ */\n\nasync function checkBulletedListCompliance(\n  ctx: Word.RequestContext,\n  paragraph: Word.Paragraph,\n  rules: any,\n  aliases: Record<string, string>,\n  issues: Issue[]\n): Promise<void> {\n  \n  try {\n    const raw = paragraph.style || \"\";\n    const std = normalizeStyle(raw, aliases);\n    const txt = paragraph.text || \"\";\n\n    console.log(\"[DEBUG] Checking paragraph: \\\"\" + txt.substring(0, 50) + \"...\\\" | Style: \\\"\" + raw + \"\\\" | Normalized: \\\"\" + std + \"\\\"\");\n\n    // Skip placeholder text controls and empty paragraphs\n    if (txt.includes(\"텍스트를 입력하려면 여기를 클릭하거나 탭하세요\") || \n        txt.includes(\"Click or tap here to enter text\") ||\n        txt.includes(\"Type here\") ||\n        txt.trim() === \"\" ||\n        /^(\\[.*\\]|\\{.*\\}|\\(.*\\))$/.test(txt.trim())) {\n      console.log(\"[DEBUG] Skipping placeholder/empty paragraph\");\n      return;\n    }\n\n    // Skip TOC-like content\n    if (isTocStyleName(raw) || isTocStyleName(std) || isLikelyTocText(txt)) {\n      console.log(\"[DEBUG] Skipping TOC-like content\");\n      return;\n    }\n\n    // Extract rules from the configuration\n    const bulletRule = rules?.rules?.styles?.bullets ?? {};\n    const numberedRule = rules?.rules?.styles?.numberedLists ?? {};\n    \n    const allowedBulletNames: string[] = (bulletRule.allowed ?? [\n      \"TCC 글머리1\", \"TCC 글머리2\", \"TCC 글머리3\", \"TCC 글머리4\"\n    ]);\n    const allowedNumberedNames: string[] = (numberedRule.allowed ?? [\n      \"TCC 번호1\", \"TCC 번호2\", \"TCC 번호3\"\n    ]);\n    \n    const allowedBulletIndentsCm: number[] = (bulletRule.allowedIndentsCm ?? [0.71, 1.21, 1.71, 2.21]);\n    const allowedNumberedIndentsCm: number[] = (numberedRule.allowedIndentsCm ?? [0.71, 1.21, 1.71]);\n    \n    // Combine all allowed list styles\n    const allAllowedListNames = [...allowedBulletNames, ...allowedNumberedNames];\n    const allAllowedIndents = [...allowedBulletIndentsCm, ...allowedNumberedIndentsCm];\n    \n    // Create normalized set of allowed list styles\n    const allowedListStyles = new Set<string>();\n    allAllowedListNames.forEach(styleName => {\n      allowedListStyles.add(styleName);\n      allowedListStyles.add(normalizeStyle(styleName, aliases));\n    });\n\n    // Get indentation policy and heading info\n    const indentPolicy: Record<string, number> = rules?.rules?.indentation?.expectedCmByStyle || {};\n    const indentTolCm = Math.max(rules?.rules?.indentation?.toleranceCm ?? 0.03, 0.02);\n    \n    const headingAllowedRaw: string[] = (rules?.rules?.styles?.headings?.allowed ?? []) as string[];\n    const HEADING_ALLOWED = new Set(headingAllowedRaw.map(s => normalizeStyle(s, aliases)));\n    \n    // Check if this is a heading style - if so, skip list processing\n    const isHeading =\n      HEADING_ALLOWED.has(std) ||\n      HEADING_ALLOWED.has(raw) ||\n      /^(heading|제목)\\s*\\d+/.test(std) ||\n      /^(heading|제목)\\s*\\d+/.test((raw||\"\").toLowerCase());\n    \n    if (isHeading) {\n      console.log(\"[DEBUG] Skipping heading style:\", raw);\n      return;\n    }\n\n    // Enhanced list detection\n    const trimmedText = txt.trim();\n    \n    // First check if text looks like a heading\n    const looksLikeHeading = /^(\\d+\\.)*\\d+\\s+[A-Z]/.test(trimmedText) ||\n                            /^\\d+\\.\\s+[A-Z]/.test(trimmedText) ||        \n                            /^Chapter\\s+\\d+/i.test(trimmedText) ||       \n                            /^제\\s*\\d+/i.test(trimmedText);              \n    \n    if (looksLikeHeading) {\n      console.log(\"[DEBUG] Skipping heading-like text:\", trimmedText.substring(0, 30));\n      return;\n    }\n    \n    const listHeuristics = {\n      hasBulletChar: /^[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□]\\s+/.test(trimmedText),\n      hasDashBullet: /^[\\-–—]\\s+/.test(trimmedText),\n      hasNumbering: /^(\\(?\\d{1,2}\\)|(\\d{1,2}[\\.)]))(\\s+)/.test(trimmedText) && !looksLikeHeading,\n      hasLettering: /^(\\(?[A-Za-z]\\)|([A-Za-z][\\.)]))(\\s+)/.test(trimmedText),\n      hasRoman: /^(\\(?[ivxlc]{1,4}\\)|([ivxlc]{1,4}[\\.)]))(\\s+)/i.test(trimmedText),\n      isWordList: !!paragraph.isListItem,\n      hasTabBullet: /^\\t+[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□\\-–—]\\s+/.test(trimmedText),\n      hasSpaceBullet: /^\\s{2,}[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□\\-–—]\\s+/.test(trimmedText)\n    };\n    \n    const hasVisualListMarkers = listHeuristics.hasBulletChar || \n                                listHeuristics.hasDashBullet ||\n                                listHeuristics.hasNumbering || \n                                listHeuristics.hasLettering ||\n                                listHeuristics.hasRoman ||\n                                listHeuristics.hasTabBullet ||\n                                listHeuristics.hasSpaceBullet;\n    \n    const isAnyKindOfList = listHeuristics.isWordList || hasVisualListMarkers;\n    const isRealList = listHeuristics.isWordList && hasVisualListMarkers;\n    const hasWrongStyleList = hasVisualListMarkers && !listHeuristics.isWordList;\n    \n    const isBulletType = listHeuristics.hasBulletChar || listHeuristics.hasDashBullet;\n    const isNumberedType = listHeuristics.hasNumbering || listHeuristics.hasLettering || listHeuristics.hasRoman;\n    \n    // Only check paragraphs that actually look like lists\n    if (!isAnyKindOfList) {\n      console.log(\"[DEBUG] Not a list, skipping list checks\");\n      return;\n    }\n\n    // Calculate current indent for fixMeta\n    const leftCm = toCm((paragraph.leftIndent as any) || 0);\n    const firstCm = toCm((paragraph.firstLineIndent as any) || 0);\n    const currentIndent = leftCm + firstCm;\n\n    // Check 1: Style compliance for all list-like paragraphs\n    const hasCorrectListStyle = allowedListStyles.has(raw) || allowedListStyles.has(std);\n    \n    if (!hasCorrectListStyle) {\n      console.log(\"[DEBUG] ❌ STYLE ISSUE FOUND - adding to issues\");\n      \n      try {\n        const tag = await markParagraph(ctx, paragraph);\n        \n        let allowedStylesDisplay: string;\n        let issueKind: IssueKind;\n        let fixMeta: any;\n        \n        if (isBulletType) {\n          allowedStylesDisplay = Array.from(new Set(allowedBulletNames)).join(\", \");\n          issueKind = \"bullet-style\";\n          fixMeta = { \n            currentIndent: currentIndent,\n            allowedStyles: allowedBulletNames,\n            allowedIndents: allowedBulletIndentsCm\n          };\n        } else if (isNumberedType) {\n          allowedStylesDisplay = Array.from(new Set(allowedNumberedNames)).join(\", \");\n          issueKind = \"numbered-style\";\n          fixMeta = { \n            currentIndent: currentIndent,\n            allowedStyles: allowedNumberedNames,\n            allowedIndents: allowedNumberedIndentsCm\n          };\n        } else {\n          allowedStylesDisplay = Array.from(new Set(allAllowedListNames)).join(\", \");\n          issueKind = \"bullet-style\";\n          fixMeta = { \n            currentIndent: currentIndent,\n            allowedStyles: allowedBulletNames,\n            allowedIndents: allowedBulletIndentsCm\n          };\n        }\n        \n        issues.push({\n          tag,\n          kind: issueKind,\n          message: \"List paragraph must use: \" + allowedStylesDisplay + \" (found \\\"\" + (raw || std || \"unknown\") + \"\\\").\",\n          fixMeta: fixMeta\n        });\n      } catch (markError) {\n        console.error(\"Error marking paragraph for style issue:\", markError);\n        // Continue processing other issues even if marking fails\n      }\n    }\n\n    // Check 2: Indent compliance (only for real lists with proper formatting)\n    if (isRealList) {\n      try {\n        const textStartIndent = currentIndent;\n\n        // Check if there's a specific indent policy for this style\n        let expectedIndent: number | undefined;\n        \n        if (indentPolicy[raw]) {\n          expectedIndent = indentPolicy[raw];\n        } else {\n          const normalizedStyle = normalizeStyle(raw, aliases);\n          if (indentPolicy[normalizedStyle]) {\n            expectedIndent = indentPolicy[normalizedStyle];\n          }\n        }\n\n        if (expectedIndent !== undefined) {\n          const indentDifference = Math.abs(textStartIndent - expectedIndent);\n          \n          if (indentDifference > indentTolCm) {\n            console.log(\"[DEBUG] ❌ INDENT ISSUE FOUND (specific policy) - adding to issues\");\n            try {\n              const tag = await markParagraph(ctx, paragraph);\n              issues.push({\n                tag,\n                kind: \"indent\",\n                message: \"Indent \" + round2(textStartIndent) + \" cm (expected \" + round2(expectedIndent) + \" cm) for style \\\"\" + (raw || std) + \"\\\".\",\n                fixMeta: { expectedCm: expectedIndent }\n              });\n            } catch (markError) {\n              console.error(\"Error marking paragraph for indent issue:\", markError);\n            }\n          }\n        } else {\n          // No specific policy - check against appropriate allowed indent tiers\n          let allowedIndentsCm: number[];\n          \n          if (isBulletType) {\n            allowedIndentsCm = allowedBulletIndentsCm;\n          } else if (isNumberedType) {\n            allowedIndentsCm = allowedNumberedIndentsCm;\n          } else {\n            allowedIndentsCm = allAllowedIndents;\n          }\n          \n          const nearestAllowedIndent = allowedIndentsCm.reduce((best, cm) => {\n            const distance = Math.abs(textStartIndent - cm);\n            return distance < best.distance ? { cm, distance } : best;\n          }, { \n            cm: allowedIndentsCm[0], \n            distance: Number.POSITIVE_INFINITY \n          });\n\n          const tierTolerance = indentTolCm + 0.03;\n          \n          if (nearestAllowedIndent.distance > tierTolerance) {\n            console.log(\"[DEBUG] ❌ INDENT ISSUE FOUND (tier-based) - adding to issues\");\n            try {\n              const tag = await markParagraph(ctx, paragraph);\n              const allowedIndentsDisplay = allowedIndentsCm.map(v => round2(v)).join(\", \");\n              issues.push({\n                tag,\n                kind: \"indent\",\n                message: \"List indent \" + round2(textStartIndent) + \" cm not in \" + allowedIndentsDisplay + \" cm.\",\n                fixMeta: { expectedCm: nearestAllowedIndent.cm }\n              });\n            } catch (markError) {\n              console.error(\"Error marking paragraph for tier indent issue:\", markError);\n            }\n          }\n        }\n      } catch (indentError) {\n        console.error(\"Error checking indent compliance:\", indentError);\n      }\n    }\n    \n    console.log(\"[DEBUG] --- End of list check for this paragraph ---\\n\");\n    \n  } catch (error) {\n    console.error(\"Error in checkBulletedListCompliance:\", error);\n    // Don't throw - continue processing other paragraphs\n  }\n}\n\n/** After \"<Label> 1[.2]*\", return the remaining text (trimmed-left). */\nfunction tailAfterLabelNumber(text: string, labels: string[]): string {\n  try {\n    const t = (text || \"\").replace(/\\u00A0/g, \" \");\n    const labelAlt = labels.map(l => l.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")).join(\"|\");\n    const re = new RegExp(\n      \"^\\\\s*(?:\" + labelAlt + \")\\\\s*\\\\d+(?:\\\\.\\\\d+)*\\\\s*([\\\\s\\\\S]*)$\",\n      \"i\"\n    );\n    const m = re.exec(t);\n    return m ? m[1].replace(/^\\s+/, \"\") : \"\";\n  } catch {\n    return \"\";\n  }\n}\n\n/** True if the tail clearly continues as a sentence (not a caption head). */\nfunction hasRealSentenceAfterNumber(text: string, labels: string[]): boolean {\n  try {\n    const tail = tailAfterLabelNumber(text, labels);\n    if (!tail) return false;\n\n    if (/^[.:—–-]/.test(tail)) return false;\n\n    const firstWord = /^[A-Za-z]+/.exec(tail);\n    if (firstWord && firstWord[0].charAt(0) === firstWord[0].charAt(0).toLowerCase()) {\n      return true;\n    }\n\n    const determiners = /\\b(the|this|that|these|those|a|an|our|its?|their|there|here|we|it|they|will|can|should|would|could|may|might|must)\\b/i;\n    const earlyVerbs = /\\b(shows?|illustrates?|lists?|presents?|summarizes?|depicts?|compares?|gives?|displays?|demonstrates?|indicates?|describes?|contains?|includes?|provides?|represents?|reveals?|explains?|outlines?|details?|reports?|records?|tracks?|measures?|analyzes?|examines?)\\b/i;\n    const explanatoryPatterns = /\\b(is|are|was|were|has|have|had|does|do|did|will|would|can|could|should|may|might|must)\\b/i;\n    const conjunctions = /\\b(and|but|or|so|yet|for|nor|because|since|although|though|while|whereas|however|therefore|thus|hence)\\b/i;\n\n    const firstEight = tail.split(/\\s+/).slice(0, 8).join(\" \");\n    \n    if (determiners.test(firstEight) || \n        earlyVerbs.test(firstEight) || \n        explanatoryPatterns.test(firstEight) ||\n        conjunctions.test(firstEight)) {\n      return true;\n    }\n\n    if (/^[([{}]/.test(tail)) return false;\n    if (/[.!?]\\s+[A-Z]/.test(tail)) return true;\n\n    return false;\n  } catch {\n    return false;\n  }\n}\n\n/* ------------------------------ Caption helpers ------------------------------ */\n\nfunction joinLabelsToWordBoundary(labels: string[]) {\n  try {\n    return labels.map(l => l.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\")).join(\"|\");\n  } catch {\n    return \"\";\n  }\n}\n\nfunction looksLikeCaptionText(text: string, labels: string[]): boolean {\n  try {\n    const t = (text || \"\").replace(/\\u00A0/g, \" \");\n    const re = new RegExp(\"^\\\\s*(?:\" + joinLabelsToWordBoundary(labels) + \")\\\\b\", \"i\");\n    return re.test(t);\n  } catch {\n    return false;\n  }\n}\n\nfunction descriptionAfterNumber(text: string, labels: string[]): string {\n  try {\n    const t = (text ?? \"\").replace(/\\u00A0/g, \" \");\n    const head = new RegExp(\n      \"^\\\\s*(?:\" + joinLabelsToWordBoundary(labels) + \")\\\\s*\\\\d+(?:\\\\.\\\\d+)*\\\\s*[:.\\\\-—–]?\\\\s*\",\n      \"i\"\n    );\n    return t.replace(head, \"\").trim();\n  } catch {\n    return \"\";\n  }\n}\n\nasync function hasChapterSeqForLabelRobust(\n  ctx: Word.RequestContext,\n  p: Word.Paragraph,\n  label: \"Table\" | \"Figure\"\n): Promise<boolean> {\n  try {\n    // First try the Field API approach with better error handling\n    try {\n      const fields = p.getRange().fields;\n      fields.load(\"items\");\n      await ctx.sync();\n      \n      if (fields.items && fields.items.length) {\n        const fieldPromises = fields.items.map(f => {\n          try {\n            return (f as any).load?.(\"code\");\n          } catch {\n            return null;\n          }\n        }).filter(Boolean);\n        \n        if (fieldPromises.length > 0) {\n          await ctx.sync();\n          \n          let hasStyle = false, hasSeq = false, hasArabic = false, hasReset = false;\n          const reSeq = new RegExp(\"\\\\bSEQ\\\\s+\" + label + \"\\\\b\", \"i\");\n          \n          for (const f of fields.items as any[]) {\n            try {\n              const code = String(f?.code ?? \"\");\n              if (/\\bSTYLEREF\\s+1\\s+\\\\s\\b/i.test(code)) hasStyle = true;\n              if (reSeq.test(code)) hasSeq = true;\n              if (/\\*\\s*ARABIC\\b/i.test(code)) hasArabic = true;\n              if (/\\\\s\\s*1\\b/i.test(code)) hasReset = true;\n            } catch (fieldError) {\n              console.warn(\"Error processing field code:\", fieldError);\n            }\n          }\n          \n          if (hasStyle && hasSeq && hasArabic && hasReset) return true;\n        }\n      }\n    } catch (fieldApiError) {\n      console.warn(\"Field API approach failed:\", fieldApiError);\n    }\n\n    // Fallback to OOXML approach with better error handling\n    try {\n      const oox = p.getRange().getOoxml();\n      await ctx.sync();\n      const xml = String(oox.value || \"\");\n\n      const hasFldSimpleStyle = /<w:fldSimple[^>]*\\binstr=\"[^\"]*\\bSTYLEREF\\s+1\\s+\\\\s\\b[^\"]*\"/i.test(xml);\n      const hasFldSimpleSeq   = new RegExp(\n        \"<w:fldSimple[^>]*\\\\binstr=\\\"[^\\\"]*\\\\bSEQ\\\\s+\" + label + \"\\\\b[^\\\"]*\\\\*\\\\s*ARABIC[^\\\"]*\\\\\\\\s\\\\s*1[^\\\"]*\\\"\",\n        \"i\"\n      ).test(xml);\n      if (hasFldSimpleStyle && hasFldSimpleSeq) return true;\n\n      const parts: string[] = [];\n      const reInstr = /<w:instrText\\b[^>]*>([\\s\\S]*?)<\\/w:instrText>/gi;\n      let m: RegExpExecArray | null;\n      while ((m = reInstr.exec(xml)) !== null) { \n        parts.push(m[1]); \n        if (reInstr.lastIndex === m.index) reInstr.lastIndex++; \n      }\n      \n      if (parts.length) {\n        const joined = parts.join(\"\");\n        const hasStyle = /\\bSTYLEREF\\s*1\\s*\\\\s\\b/i.test(joined);\n        const hasSeq   = new RegExp(\"\\\\bSEQ\\\\s*\" + label + \"\\\\b\", \"i\").test(joined);\n        const hasArabic= /\\*\\s*ARABIC\\b/i.test(joined);\n        const hasReset = /\\\\s\\s*1\\b/i.test(joined);\n        if (hasStyle && hasSeq && hasArabic && hasReset) return true;\n      }\n      \n      return false;\n    } catch (ooxmlError) {\n      console.warn(\"OOXML approach failed:\", ooxmlError);\n      return false;\n    }\n  } catch (error) {\n    console.error(\"Critical error in hasChapterSeqForLabelRobust:\", error);\n    return false;\n  }\n}\n\nfunction stripManualPrefix(text: string, labels: string[]): string {\n  try {\n    const head = new RegExp(\n      \"^\\\\s*(?:\" + joinLabelsToWordBoundary(labels) + \")\\\\s*[.\\\\-—–:]?\\\\s*\\\\d+(?:[.\\\\-]\\\\d+)*\\\\s*[.\\\\-—–:]?\\\\s*\",\n      \"i\"\n    );\n    return (text || \"\").replace(head, \"\").trimStart();\n  } catch {\n    return text || \"\";\n  }\n}\n\nfunction prependLabelChapterSeqPrefix(range: Word.Range, label: \"Table\" | \"Figure\") {\n  try {\n    const L = label.replace(/[&<>\"]/g, function(m) {\n      const map: Record<string, string> = { \"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\" };\n      return map[m] || m;\n    });\n    const runs =\n      \"<w:r><w:t>\" + L + \" </w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"begin\\\"/></w:r>\" +\n      \"<w:r><w:instrText xml:space=\\\"preserve\\\"> STYLEREF 1 \\\\s </w:instrText></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"separate\\\"/></w:r>\" +\n      \"<w:r><w:t>1</w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"end\\\"/></w:r>\" +\n      \"<w:r><w:t>.</w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"begin\\\"/></w:r>\" +\n      \"<w:r><w:instrText xml:space=\\\"preserve\\\"> SEQ \" + L + \" \\\\* ARABIC \\\\s 1 </w:instrText></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"separate\\\"/></w:r>\" +\n      \"<w:r><w:t>1</w:t></w:r>\" +\n      \"<w:r><w:fldChar w:fldCharType=\\\"end\\\"/></w:r>\" +\n      \"<w:r><w:t xml:space=\\\"preserve\\\"> </w:t></w:r>\";\n    range.insertOoxml(runs, Word.InsertLocation.start);\n  } catch (error) {\n    console.error(\"Error inserting OOXML:\", error);\n  }\n}\n\n/* ------------------------------ Load Rules / Preview / Clear ------------------------------ */\n\nfunction renderRulesPreview(rules: any) {\n  try {\n    let box =\n      document.getElementById(\"rulesDump\") ||\n      document.getElementById(\"rulesPreview\") ||\n      document.getElementById(\"rulesBox\");\n\n    if (!box) {\n      const statusEl = document.getElementById(\"rulesStatus\");\n      box = document.createElement(\"pre\");\n      box.id = \"rulesPreview\";\n      const st = (box as HTMLElement).style;\n      st.whiteSpace = \"pre-wrap\";\n      st.wordBreak = \"break-word\";\n      st.marginTop = \"8px\";\n      st.padding = \"8px 10px\";\n      st.border = \"1px solid #ddd\";\n      st.borderRadius = \"4px\";\n      st.background = \"#f4f4f4\";\n      st.maxHeight = \"260px\";\n      st.overflow = \"auto\";\n      if (statusEl?.parentElement) statusEl.parentElement.appendChild(box);\n      else document.body.appendChild(box);\n    }\n\n    const pretty = JSON.stringify(rules ?? {}, null, 2);\n    const MAX = 80 * 1024;\n    (box as HTMLElement).textContent = pretty.length > MAX ? pretty.slice(0, MAX) + \"\\n…(truncated)…\" : pretty;\n  } catch (error) {\n    console.error(\"Error rendering rules preview:\", error);\n  }\n}\n\nfunction bindRulesLoader() {\n  try {\n    const fileInput = document.getElementById(\"rulesFileInput\") as HTMLInputElement | null;\n    const loadBtn   = document.getElementById(\"loadRulesBtn\") as HTMLButtonElement | null;\n    const statusEl  = document.getElementById(\"rulesStatus\") as HTMLElement | null;\n\n    const setStatus = (msg: string, color = \"#555\") => { \n      if (statusEl) { \n        statusEl.textContent = msg; \n        statusEl.style.color = color; \n      } \n    };\n    \n    const applyRules = (obj: any) => { \n      setRules(obj); \n      setStatus(\"Rules loaded.\", \"#0a0\"); \n      renderRulesPreview(obj); \n    };\n\n    async function readFile(f: File): Promise<boolean> {\n      try {\n        const txt = await f.text();\n        const json = JSON.parse(txt);\n        applyRules(json);\n        return true;\n      } catch (e) {\n        console.error(\"[SGC] Failed to read/parse file:\", e);\n        setStatus(\"Invalid rules.json (cannot parse).\", \"#c00\");\n        return false;\n      }\n    }\n\n    if (fileInput) {\n      fileInput.accept = \".json,application/json\";\n      fileInput.addEventListener(\"change\", async () => {\n        if (!fileInput.files || fileInput.files.length === 0) return;\n        await readFile(fileInput.files[0]);\n      });\n    }\n\n    async function openPickerAndRead(): Promise<boolean> {\n      if (fileInput) {\n        return await new Promise<boolean>((resolve) => {\n          fileInput.value = \"\";\n          const handler = async () => {\n            fileInput.removeEventListener(\"change\", handler);\n            if (fileInput.files && fileInput.files.length > 0) resolve(await readFile(fileInput.files[0]));\n            else resolve(false);\n          };\n          fileInput.addEventListener(\"change\", handler, { once: true });\n          fileInput.click();\n        });\n      }\n      return false;\n    }\n\n    if (loadBtn) {\n      loadBtn.addEventListener(\"click\", async () => {\n        setStatus(\"Loading rules…\");\n        if (fileInput?.files?.length) { \n          const ok = await readFile(fileInput.files[0]); \n          if (ok) return; \n        }\n        const picked = await openPickerAndRead();\n        if (!picked) setStatus(\"Please choose rules.json manually.\", \"#c00\");\n      });\n    }\n  } catch (error) {\n    console.error(\"Error binding rules loader:\", error);\n  }\n}\n\nasync function clearMarkers() {\n  try {\n    await Word.run(async (ctx) => {\n      try {\n        const all = ctx.document.contentControls;\n        all.load(\"items/tag\"); \n        await ctx.sync();\n        \n        // Clear highlighting first\n        for (const cc of all.items) {\n          if (!cc.tag || !cc.tag.startsWith(ISSUE_TAG_PREFIX)) continue;\n          try {\n            const r = cc.getRange();\n            r.font.highlightColor = \"NoColor\";\n            (r.font as any).highlightColor = \"None\";\n          } catch (highlightError) {\n            console.warn(\"Error clearing highlight:\", highlightError);\n          }\n        }\n        await ctx.sync();\n\n        // Delete content controls\n        const toDelete = all.items.filter(cc => cc.tag && cc.tag.startsWith(ISSUE_TAG_PREFIX));\n        for (const cc of toDelete) {\n          try {\n            cc.delete(true);\n          } catch (deleteError) {\n            console.warn(\"Error deleting content control:\", deleteError);\n          }\n        }\n        await ctx.sync();\n\n        // Clear any remaining highlights\n        try {\n          const paras = ctx.document.body.paragraphs;\n          paras.load(\"items\"); \n          await ctx.sync();\n          \n          for (const p of paras.items) {\n            try {\n              const r = p.getRange();\n              r.font.highlightColor = \"NoColor\";\n              (r.font as any).highlightColor = \"None\";\n            } catch (paraHighlightError) {\n              console.warn(\"Error clearing paragraph highlight:\", paraHighlightError);\n            }\n          }\n          await ctx.sync();\n\n          const tables = ctx.document.body.tables;\n          tables.load(\"items\"); \n          await ctx.sync();\n          \n          for (const t of tables.items) {\n            try {\n              const r = t.getRange();\n              r.font.highlightColor = \"NoColor\";\n              (r.font as any).highlightColor = \"None\";\n            } catch (tableHighlightError) {\n              console.warn(\"Error clearing table highlight:\", tableHighlightError);\n            }\n          }\n          await ctx.sync();\n\n          const allRange = ctx.document.body.getRange();\n          allRange.font.highlightColor = \"NoColor\";\n          (allRange.font as any).highlightColor = \"None\";\n          await ctx.sync();\n        } catch (globalClearError) {\n          console.warn(\"Error with global highlight clearing:\", globalClearError);\n        }\n      } catch (clearError) {\n        console.error(\"Error in clearMarkers main logic:\", clearError);\n      }\n    });\n  } catch (error) {\n    console.error(\"Critical error in clearMarkers:\", error);\n  }\n}\n\n/* ------------------------------ Scan with Better Error Handling ------------------------------ */\n\nfunction bindScan() {\n  try {\n    const btn = document.getElementById(\"scanBtn\") as HTMLButtonElement | null;\n    const status = document.getElementById(\"scanStatus\") as HTMLElement | null;\n    const list = document.getElementById(\"issuesList\") as HTMLOListElement | null;\n    if (!btn || !status || !list) return;\n\n    btn.addEventListener(\"click\", async () => {\n      try {\n        const rules = getRules();\n        if (!rules) { \n          status.textContent = \"Load a rules JSON first.\"; \n          status.style.color = \"#c00\"; \n          return; \n        }\n\n        status.textContent = \"Scanning…\"; \n        status.style.color = \"#555\"; \n        list.innerHTML = \"\";\n        \n        const issues: Issue[] = [];\n        const aliases: Record<string, string> = rules?.meta?.styleNameAliases || {};\n\n        const indentPolicy: Record<string, number> = rules?.rules?.indentation?.expectedCmByStyle || {};\n        const indentTolCm = Math.max(rules?.rules?.indentation?.toleranceCm ?? 0.03, 0.02);\n\n        const headingAllowedRaw: string[] = (rules?.rules?.styles?.headings?.allowed ?? []) as string[];\n        const HEADING_ALLOWED = new Set(headingAllowedRaw.map(s => normalizeStyle(s, aliases)));\n\n        const capRules = rules?.rules?.styles?.captions || {};\n        const figRule = capRules.figure || {};\n        const tblRule = capRules.table || {};\n        const figAllowed = normalizeStyleList(figRule.style ?? \"TCC 그림 캡션\", aliases);\n        const tblAllowed = normalizeStyleList((tblRule.styles ?? tblRule.style) ?? \"캡션,TCC 표 캡션,표캡션TCC\", aliases);\n        const FIG_LABELS = labelsToArray(figRule.seqLabels, [\"Figure\",\"그림\"]);\n        const TBL_LABELS = labelsToArray(tblRule.seqLabels, [\"Table\",\"표\"]);\n        const requireFigSeq = figRule.requireAutoNumber !== false;\n        const requireTblSeq = tblRule.requireAutoNumber !== false;\n\n        // Clear existing markers first\n        try {\n          await Word.run(async (context) => {\n            const all = context.document.contentControls;\n            all.load(\"items/tag\"); \n            await context.sync();\n            \n            const toDelete = all.items.filter(cc => cc.tag && cc.tag.startsWith(ISSUE_TAG_PREFIX));\n            for (const cc of toDelete) {\n              try {\n                cc.delete(true);\n              } catch (deleteError) {\n                console.warn(\"Error deleting existing marker:\", deleteError);\n              }\n            }\n            await context.sync();\n          });\n        } catch (clearError) {\n          console.warn(\"Error clearing existing markers:\", clearError);\n        }\n\n        // Main scanning logic\n        await Word.run(async (context) => {\n          try {\n            const body = context.document.body;\n\n            let skip = 0;\n            while (true) {\n              try {\n                const paras = body.paragraphs;\n                paras.load({ select: \"style,text,isListItem,leftIndent,firstLineIndent\", top: BATCH_SIZE, skip });\n                await context.sync();\n                \n                if (paras.items.length === 0) break;\n\n                const tocSkip = await computeTocSkips(context, paras);\n\n                for (let i = 0; i < paras.items.length; i++) {\n                  try {\n                    const p = paras.items[i];\n                    if (tocSkip[i]) continue;\n\n                    // Check list compliance\n                    await checkBulletedListCompliance(context, p, rules, aliases, issues);\n\n                    const raw = p.style || \"\";\n                    const std = normalizeStyle(raw, aliases);\n                    const txt = p.text || \"\";\n\n                    // Skip placeholder/empty content\n                    if (txt.includes(\"텍스트를 입력하려면 여기를 클릭하거나 탭하세요\") || \n                        txt.includes(\"Click or tap here to enter text\") ||\n                        txt.includes(\"Type here\") ||\n                        txt.trim() === \"\" ||\n                        /^(\\[.*\\]|\\{.*\\}|\\(.*\\))$/.test(txt.trim())) {\n                      continue;\n                    }\n\n                    // Skip headings\n                    const isHeading =\n                      HEADING_ALLOWED.has(std) ||\n                      /^(heading|제목)\\s*\\d+/.test(std) ||\n                      /^(heading|제목)\\s*\\d+/.test((raw||\"\").toLowerCase());\n                    if (isHeading) continue;\n\n                    // Check indentation\n                    try {\n                      const leftCm  = toCm((p.leftIndent as any) || 0);\n                      const firstCm = toCm((p.firstLineIndent as any) || 0);\n                      const textStart = leftCm + firstCm;\n\n                      const expected = ((): number | undefined => {\n                        if ((indentPolicy as any)[raw]) return indentPolicy[raw];\n                        const n = normalizeStyle(raw, aliases);\n                        if ((indentPolicy as any)[n]) return (indentPolicy as any)[n];\n                        return undefined;\n                      })();\n\n                      if (typeof expected === \"number\") {\n                        const trimmedText = txt.trim();\n                        const listHeuristic =\n                          /^[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0\\-–·•◦○▪□]\\s+/.test(trimmedText) ||\n                          /^(\\(?\\d{1,3}|\\(?[A-Za-z]{1,3}|\\(?[IVXLCM]{1,4})[.)]\\s+/i.test(trimmedText) ||\n                          /^\\d+\\s+/.test(trimmedText);\n                        const isRealList = !!p.isListItem && listHeuristic;\n\n                        if (!isRealList && Math.abs(textStart - expected) > indentTolCm) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag, \n                              kind: \"indent\",\n                              message: \"Indent \" + round2(textStart) + \" cm (expected \" + round2(expected) + \" cm) for style \\\"\" + (raw || std) + \"\\\".\",\n                              fixMeta: { expectedCm: expected }\n                            });\n                          } catch (indentMarkError) {\n                            console.warn(\"Error marking indent issue:\", indentMarkError);\n                          }\n                        }\n                      }\n                    } catch (indentCheckError) {\n                      console.warn(\"Error checking indentation:\", indentCheckError);\n                    }\n                  } catch (paragraphError) {\n                    console.warn(`Error processing paragraph ${i}:`, paragraphError);\n                  }\n                }\n\n                skip += paras.items.length;\n              } catch (batchError) {\n                console.error(`Error processing batch starting at ${skip}:`, batchError);\n                skip += BATCH_SIZE; // Continue with next batch\n                if (skip > 10000) break; // Safety break to avoid infinite loop\n              }\n            }\n\n            // Caption checking\n            let cskip = 0;\n            while (true) {\n              try {\n                const caps = body.paragraphs;\n                caps.load({ select: \"style,text\", top: BATCH_SIZE, skip: cskip });\n                await context.sync();\n                \n                if (caps.items.length === 0) break;\n\n                const tocSkip2 = await computeTocSkips(context, caps);\n\n                for (let i = 0; i < caps.items.length; i++) {\n                  try {\n                    if (tocSkip2[i]) continue;\n\n                    const p   = caps.items[i];\n                    const raw = p.style || \"\";\n                    const std = normalizeStyle(raw, aliases);\n                    const txt = p.text || \"\";\n\n                    // Skip placeholder/empty content\n                    if (txt.includes(\"텍스트를 입력하려면 여기를 클릭하거나 탭하세요\") || \n                        txt.includes(\"Click or tap here to enter text\") ||\n                        txt.includes(\"Type here\") ||\n                        txt.trim() === \"\" ||\n                        /^(\\[.*\\]|\\{.*\\}|\\(.*\\))$/.test(txt.trim())) {\n                      continue;\n                    }\n\n                    const styleIsFig = figAllowed.has(std) || figAllowed.has(raw);\n                    const styleIsTbl = tblAllowed.has(std) || tblAllowed.has(raw);\n\n                    const looksFig = looksLikeCaptionText(txt, FIG_LABELS);\n                    const looksTbl = looksLikeCaptionText(txt, TBL_LABELS);\n\n                    const needFigCheck = styleIsFig || looksFig;\n                    const needTblCheck = styleIsTbl || looksTbl;\n                    if (!needFigCheck && !needTblCheck) continue;\n\n                    let figOK = false, tblOK = false;\n                    if (needFigCheck) { \n                      try { \n                        figOK = await hasChapterSeqForLabelRobust(context, p, \"Figure\"); \n                      } catch (figCheckError) {\n                        console.warn(\"Error checking figure fields:\", figCheckError);\n                      }\n                    }\n                    if (needTblCheck) { \n                      try { \n                        tblOK = await hasChapterSeqForLabelRobust(context, p, \"Table\"); \n                      } catch (tblCheckError) {\n                        console.warn(\"Error checking table fields:\", tblCheckError);\n                      }\n                    }\n\n                    // Figure caption checks\n                    if (styleIsFig) {\n                      if (!figOK && requireFigSeq) {\n                        try {\n                          const tag = await markParagraph(context, p);\n                          issues.push({ \n                            tag, \n                            kind: \"figure-style\", \n                            message: \"Figure caption uses manual numbering. Expected { STYLEREF 1 \\\\s }.{ SEQ Figure \\\\* ARABIC \\\\s 1 }\" \n                          });\n                        } catch (figMarkError) {\n                          console.warn(\"Error marking figure issue:\", figMarkError);\n                        }\n                      } else if (figOK) {\n                        const rest = descriptionAfterNumber(txt, FIG_LABELS);\n                        if (!rest) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({ \n                              tag, \n                              kind: \"figure-empty\", \n                              message: \"Figure caption is empty.\" \n                            });\n                          } catch (figEmptyMarkError) {\n                            console.warn(\"Error marking empty figure:\", figEmptyMarkError);\n                          }\n                        }\n                      }\n                    } else if (looksFig) {\n                      if (!figOK) {\n                        if (!hasRealSentenceAfterNumber(txt, FIG_LABELS)) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag,\n                              kind: \"figure-style\",\n                              message: \"Figure-like text uses neither automatic numbering nor the correct caption style.\"\n                            });\n                          } catch (figStyleMarkError) {\n                            console.warn(\"Error marking figure style issue:\", figStyleMarkError);\n                          }\n                        }\n                      } else {\n                        try {\n                          const tag = await markParagraph(context, p);\n                          issues.push({\n                            tag,\n                            kind: \"figure-style\",\n                            message: \"Figure caption uses the wrong style. Apply the designated figure caption style.\"\n                          });\n                        } catch (figWrongStyleMarkError) {\n                          console.warn(\"Error marking figure wrong style:\", figWrongStyleMarkError);\n                        }\n                      }\n                    }\n\n                    // Table caption checks\n                    if (styleIsTbl) {\n                      if (!tblOK && requireTblSeq) {\n                        try {\n                          const tag = await markParagraph(context, p);\n                          issues.push({ \n                            tag, \n                            kind: \"table-style\", \n                            message: \"Table caption uses manual numbering. Expected { STYLEREF 1 \\\\s }.{ SEQ Table \\\\* ARABIC \\\\s 1 }\" \n                          });\n                        } catch (tblMarkError) {\n                          console.warn(\"Error marking table issue:\", tblMarkError);\n                        }\n                      } else if (tblOK) {\n                        const rest = descriptionAfterNumber(txt, TBL_LABELS);\n                        if (!rest) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({ \n                              tag, \n                              kind: \"table-empty\", \n                              message: \"Table caption is empty.\" \n                            });\n                          } catch (tblEmptyMarkError) {\n                            console.warn(\"Error marking empty table:\", tblEmptyMarkError);\n                          }\n                        }\n                      }\n                    } else if (looksTbl) {\n                      if (!tblOK) {\n                        if (!hasRealSentenceAfterNumber(txt, TBL_LABELS)) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag,\n                              kind: \"table-style\",\n                              message: \"Table-like text uses neither automatic numbering nor the correct caption style.\"\n                            });\n                          } catch (tblStyleMarkError) {\n                            console.warn(\"Error marking table style issue:\", tblStyleMarkError);\n                          }\n                        }\n                      } else {\n                        if (!styleIsTbl) {\n                          try {\n                            const tag = await markParagraph(context, p);\n                            issues.push({\n                              tag,\n                              kind: \"table-style\",\n                              message: \"Table caption uses the wrong style. Apply the designated table caption style.\"\n                            });\n                          } catch (tblWrongStyleMarkError) {\n                            console.warn(\"Error marking table wrong style:\", tblWrongStyleMarkError);\n                          }\n                        }\n                      }\n                    }\n                  } catch (captionError) {\n                    console.warn(`Error processing caption ${i}:`, captionError);\n                  }\n                }\n\n                cskip += caps.items.length;\n              } catch (captionBatchError) {\n                console.error(`Error processing caption batch starting at ${cskip}:`, captionBatchError);\n                cskip += BATCH_SIZE;\n                if (cskip > 10000) break;\n              }\n            }\n          } catch (scanError) {\n            console.error(\"Error in main scan logic:\", scanError);\n            status.textContent = \"Scan failed with error: \" + scanError.message;\n            status.style.color = \"#c00\";\n            return;\n          }\n        });\n\n        (window as any).__SGC_ISSUES__ = issues;\n        renderIssues(issues);\n\n        if (issues.length === 0) { \n          status.textContent = \"Scan complete. No issues found.\"; \n          status.style.color = \"#0a0\"; \n        } else { \n          status.textContent = \"Scan complete. Found \" + issues.length + \" issue(s).\"; \n          status.style.color = \"#a60\"; \n        }\n      } catch (error) {\n        console.error(\"Critical error in scan:\", error);\n        status.textContent = \"Scan failed: \" + error.message;\n        status.style.color = \"#c00\";\n      }\n    });\n  } catch (error) {\n    console.error(\"Error binding scan:\", error);\n  }\n}\n\n/* ------------------------------ Issue List / Actions with Error Handling ------------------------------ */\n\nfunction renderIssues(issues: Issue[]) {\n  try {\n    const list = document.getElementById(\"issuesList\") as HTMLOListElement | null;\n    if (!list) return;\n    list.innerHTML = \"\";\n\n    const noFixKinds = new Set<IssueKind>([\"figure-style\", \"table-style\"]);\n\n    for (const it of issues) {\n      try {\n        const li = document.createElement(\"li\");\n        li.className = \"issue\";\n        li.dataset.tag = it.tag;\n        (li.style as any).cursor = \"pointer\";\n\n        const msg = document.createElement(\"div\");\n        msg.textContent = \"[\" + it.kind + \"] \" + it.message;\n        li.appendChild(msg);\n\n        if (!noFixKinds.has(it.kind)) {\n          const fix = document.createElement(\"button\");\n          fix.textContent = \"Fix\";\n          fix.addEventListener(\"click\", (e) => {\n            e.stopPropagation();\n            fixIssue(it).catch(err => {\n              console.error(\"Error fixing issue:\", err);\n              // Could show user feedback here\n            });\n          });\n          li.appendChild(fix);\n        }\n\n        list.appendChild(li);\n      } catch (itemError) {\n        console.warn(\"Error rendering issue item:\", itemError);\n      }\n    }\n  } catch (error) {\n    console.error(\"Error rendering issues:\", error);\n  }\n}\n\nfunction bindIssueRowClicks() {\n  try {\n    const list = document.getElementById(\"issuesList\");\n    if (!list) return;\n    \n    list.addEventListener(\"click\", (e) => {\n      try {\n        const row = (e.target as HTMLElement).closest(\"li.issue\") as HTMLLIElement | null;\n        if (!row) return;\n        const tag = row.dataset.tag;\n        if (!tag) return;\n        jumpToIssue(tag).catch(err => {\n          console.error(\"Error jumping to issue:\", err);\n        });\n      } catch (error) {\n        console.warn(\"Error handling issue row click:\", error);\n      }\n    });\n  } catch (error) {\n    console.error(\"Error binding issue row clicks:\", error);\n  }\n}\n\nasync function jumpToIssue(tag: string) {\n  try {\n    await Word.run(async (ctx) => {\n      try {\n        const controls = ctx.document.contentControls.getByTag(ISSUE_TAG_PREFIX + tag);\n        controls.load(\"items\"); \n        await ctx.sync();\n        \n        if (controls.items.length > 0) { \n          controls.items[0].select(); \n          await ctx.sync(); \n        }\n      } catch (jumpError) {\n        console.warn(\"Error jumping to specific issue:\", jumpError);\n      }\n    });\n  } catch (error) {\n    console.error(\"Critical error jumping to issue:\", error);\n  }\n}\n\n/* ------------------------------ Fix Logic with Error Handling ------------------------------ */\n\nasync function fixIssue(it: Issue) {\n  try {\n    const rules = getRules() || {};\n    const aliases: Record<string, string> = rules?.meta?.styleNameAliases || {};\n    const bulletRule = rules?.rules?.styles?.bullets ?? {};\n    const numberedRule = rules?.rules?.styles?.numberedLists ?? {};\n    \n    const allowedBulletNames: string[] = (bulletRule.allowed ?? [\"TCC 글머리1\",\"TCC 글머리2\",\"TCC 글머리3\",\"TCC 글머리4\"]);\n    const allowedNumberedNames: string[] = (numberedRule.allowed ?? [\"TCC 번호1\",\"TCC 번호2\",\"TCC 번호3\"]);\n    \n    const indentPolicy: Record<string, number> = rules?.rules?.indentation?.expectedCmByStyle || {};\n    const allowedBulletIndentsCm: number[] = (bulletRule.allowedIndentsCm ?? [0.71,1.21,1.71,2.21]);\n    const allowedNumberedIndentsCm: number[] = (numberedRule.allowedIndentsCm ?? [0.71,1.21,1.71]);\n\n    const capRules = rules?.rules?.styles?.captions || {};\n    const figRule = capRules.figure || {};\n    const tblRule = capRules.table || {};\n    const figStyle = Array.isArray(figRule.style) ? figRule.style[0] : (figRule.style || \"TCC 그림 캡션\");\n    const tblStyles = (tblRule.styles || tblRule.style || \"캡션,TCC 표 캡션,표캡션TCC\");\n    const tblStyle = Array.isArray(tblStyles) ? tblStyles[0] : tblStyles;\n\n    await Word.run(async (ctx) => {\n      try {\n        const controls = ctx.document.contentControls.getByTag(ISSUE_TAG_PREFIX + it.tag);\n        controls.load(\"items\"); \n        await ctx.sync();\n        \n        if (controls.items.length === 0) return;\n        \n        const cc = controls.items[0];\n        const para = cc.getRange().paragraphs.getFirst();\n        para.load([\"style\",\"isListItem\",\"leftIndent\",\"firstLineIndent\",\"text\"]); \n        await ctx.sync();\n\n        switch (it.kind) {\n          case \"bullet-style\": {\n            try {\n              const fixMeta = it.fixMeta || {};\n              const allowedStyles = fixMeta.allowedStyles || allowedBulletNames;\n              const allowedIndents = fixMeta.allowedIndents || allowedBulletIndentsCm;\n              const currentIndent = fixMeta.currentIndent || 0;\n              \n              let bestMatch = 0;\n              let minDistance = Math.abs(currentIndent - allowedIndents[0]);\n              \n              for (let i = 1; i < allowedIndents.length; i++) {\n                const distance = Math.abs(currentIndent - allowedIndents[i]);\n                if (distance < minDistance) {\n                  minDistance = distance;\n                  bestMatch = i;\n                }\n              }\n              \n              const targetStyle = allowedStyles[bestMatch];\n              const targetIndent = allowedIndents[bestMatch];\n              \n              para.style = targetStyle;\n              (para as any).leftIndent = toPt(targetIndent);\n              (para as any).firstLineIndent = 0;\n              \n              await ctx.sync();\n              console.log(`[FIX] Applied ${targetStyle} with ${targetIndent}cm indent`);\n            } catch (bulletFixError) {\n              console.error(\"Error fixing bullet style:\", bulletFixError);\n            }\n            break;\n          }\n          case \"numbered-style\": {\n            try {\n              const fixMeta = it.fixMeta || {};\n              const allowedStyles = fixMeta.allowedStyles || allowedNumberedNames;\n              const allowedIndents = fixMeta.allowedIndents || allowedNumberedIndentsCm;\n              const currentIndent = fixMeta.currentIndent || 0;\n              \n              let bestMatch = 0;\n              let minDistance = Math.abs(currentIndent - allowedIndents[0]);\n              \n              for (let i = 1; i < allowedIndents.length; i++) {\n                const distance = Math.abs(currentIndent - allowedIndents[i]);\n                if (distance < minDistance) {\n                  minDistance = distance;\n                  bestMatch = i;\n                }\n              }\n              \n              const targetStyle = allowedStyles[bestMatch];\n              const targetIndent = allowedIndents[bestMatch];\n              \n              para.style = targetStyle;\n              (para as any).leftIndent = toPt(targetIndent);\n              (para as any).firstLineIndent = 0;\n              \n              await ctx.sync();\n              console.log(`[FIX] Applied ${targetStyle} with ${targetIndent}cm indent`);\n            } catch (numberedFixError) {\n              console.error(\"Error fixing numbered style:\", numberedFixError);\n            }\n            break;\n          }\n          case \"indent\": {\n            try {\n              const expectedCm: number = it.fixMeta?.expectedCm ?? (() => {\n                const raw = para.style || \"\";\n                if (raw in indentPolicy) return indentPolicy[raw];\n                const n = normalizeStyle(raw, aliases);\n                if (n in indentPolicy) return indentPolicy[n];\n                const txt = para.text || \"\";\n                const isBulletType = /^[\\u2022\\u25E6\\u25AA\\u25CF\\u25CB\\u25A0•◦○▪□\\-–—]\\s+/.test(txt.trim());\n                return isBulletType ? allowedBulletIndentsCm[0] : allowedNumberedIndentsCm[0];\n              })();\n              const curFirst = toCm((para.firstLineIndent as any) || 0);\n              const newLeft = expectedCm - curFirst;\n              (para as any).leftIndent = toPt(newLeft);\n              await ctx.sync();\n            } catch (indentFixError) {\n              console.error(\"Error fixing indent:\", indentFixError);\n            }\n            break;\n          }\n          case \"figure-empty\": {\n            try {\n              para.style = figStyle; \n              await ctx.sync();\n              para.select(\"End\"); \n              await ctx.sync();\n            } catch (figEmptyFixError) {\n              console.error(\"Error fixing empty figure:\", figEmptyFixError);\n            }\n            break;\n          }\n          case \"table-empty\": {\n            try {\n              para.style = tblStyle; \n              await ctx.sync();\n              para.select(\"End\"); \n              await ctx.sync();\n            } catch (tblEmptyFixError) {\n              console.error(\"Error fixing empty table:\", tblEmptyFixError);\n            }\n            break;\n          }\n        }\n\n        try {\n          cc.delete(true);\n          await ctx.sync();\n        } catch (deleteError) {\n          console.warn(\"Error deleting content control after fix:\", deleteError);\n        }\n      } catch (fixRunError) {\n        console.error(\"Error in Word.run for fix:\", fixRunError);\n      }\n    });\n  } catch (error) {\n    console.error(\"Critical error in fixIssue:\", error);\n    throw error; // Re-throw so caller can handle\n  }\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_slicedToArray","_arrayWithHoles","push","_iterableToArrayLimit","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","Office","onReady","info","_document$getElementB","_document$getElementB2","host","HostType","Word","document","getElementById","setAttribute","readFile","_ref","_callee","txt","json","_t","_context","text","JSON","parse","applyRules","console","error","setStatus","_x11","openPickerAndRead","_ref3","_callee4","_context4","fileInput","handler","_ref4","_callee3","_t2","_t3","_context3","removeEventListener","files","addEventListener","once","click","loadBtn","statusEl","msg","color","undefined","textContent","style","obj","window","styleGuideRules","setRules","rules","box","createElement","id","st","whiteSpace","wordBreak","marginTop","padding","border","borderRadius","background","maxHeight","overflow","parentElement","appendChild","body","pretty","stringify","renderRulesPreview","accept","_callee2","_context2","_callee5","_fileInput$files","_context5","bindRulesLoader","btn","status","list","_callee8","_rules$meta","_rules$rules","_rules$rules$indentat","_rules$rules2","_rules$rules$styles$h","_rules$rules3","_rules$rules4","_figRule$style","_ref7","_tblRule$styles","issues","aliases","indentPolicy","indentTolCm","headingAllowedRaw","HEADING_ALLOWED","capRules","figRule","tblRule","figAllowed","tblAllowed","FIG_LABELS","TBL_LABELS","requireFigSeq","requireTblSeq","_t19","_t20","_context9","getRules","innerHTML","meta","styleNameAliases","indentation","expectedCmByStyle","Math","max","toleranceCm","styles","headings","allowed","Set","map","normalizeStyle","captions","figure","table","normalizeStyleList","labelsToArray","seqLabels","requireAutoNumber","run","_ref8","_callee6","context","all","toDelete","_iterator2","_step2","cc","_context6","contentControls","load","sync","items","filter","tag","startsWith","ISSUE_TAG_PREFIX","delete","deleteError","warn","err","_x12","_ref9","_callee7","skip","paras","tocSkip","_loop","cskip","caps","tocSkip2","_i2","raw","std","styleIsFig","styleIsTbl","looksFig","looksTbl","needFigCheck","needTblCheck","figOK","tblOK","_tag","_tag2","_tag3","_tag4","_tag5","_tag6","_tag7","_t7","_t8","_t9","_t0","_t1","_t10","_t11","_t12","_t13","_t14","_t15","_t16","_t17","_t18","_context8","paragraphs","select","top","BATCH_SIZE","computeTocSkips","leftCm","firstCm","textStart","expected","trimmedText","listHeuristic","_t4","_t5","_t6","_context7","checkBulletedListCompliance","includes","trim","has","toLowerCase","toCm","leftIndent","firstLineIndent","isListItem","abs","markParagraph","kind","message","round2","fixMeta","expectedCm","concat","_regeneratorValues","looksLikeCaptionText","hasChapterSeqForLabelRobust","descriptionAfterNumber","hasRealSentenceAfterNumber","_x13","__SGC_ISSUES__","renderIssues","bindScan","row","target","closest","dataset","_x14","_jumpToIssue","jumpToIssue","catch","bindIssueRowClicks","clearBtn","_clearMarkers","clearMarkers","POINTS_PER_CM","pt","toPt","cm","round","base","replace","_i","_Object$entries","entries","_Object$entries$_i","k","input","_step","arr","set","_iterator","add","_unused","fallback","_unused2","__issueCounter","newIssueTag","String","padStart","_x","_x2","_markParagraph","_callee9","ctx","_t21","_context0","getRange","insertContentControl","title","appearance","isTocStyleName","rawOrStd","_unused3","isLikelyTocText","_unused4","_x3","_x4","_computeTocSkips","_callee0","fields","_i3","_arr","_load","_ref0","_i4","_arr2","_f","_code","code","_getRange","_ref1","tocRange","tocParas","_iterator4","_step4","_loop3","_paras$items","_t22","_t23","_t24","_t25","_t26","_context10","fill","forEach","fieldError","tp","_context1","tocParaError","_x5","_x6","_x7","_x8","_x9","_checkBulletedListCompliance","_callee1","paragraph","_rules$rules$styles$b","_rules$rules5","_rules$rules$styles$n","_rules$rules6","_bulletRule$allowed","_numberedRule$allowed","_bulletRule$allowedIn","_numberedRule$allowed2","_rules$rules7","_rules$rules$indentat2","_rules$rules8","_rules$rules$styles$h2","_rules$rules9","bulletRule","numberedRule","allowedBulletNames","allowedNumberedNames","allowedBulletIndentsCm","allowedNumberedIndentsCm","allAllowedListNames","allAllowedIndents","allowedListStyles","looksLikeHeading","listHeuristics","hasVisualListMarkers","isRealList","isBulletType","isNumberedType","currentIndent","allowedStylesDisplay","issueKind","textStartIndent","expectedIndent","normalizedStyle","_tag8","allowedIndentsCm","nearestAllowedIndent","tierTolerance","_tag9","allowedIndentsDisplay","_t27","_t28","_t29","_t30","_t31","_context11","log","substring","bullets","numberedLists","_toConsumableArray","styleName","hasBulletChar","hasDashBullet","hasNumbering","hasLettering","hasRoman","isWordList","hasTabBullet","hasSpaceBullet","join","allowedStyles","allowedIndents","reduce","best","distance","Number","POSITIVE_INFINITY","labels","tail","labelAlt","RegExp","exec","_unused5","tailAfterLabelNumber","firstWord","charAt","firstEight","split","_unused6","joinLabelsToWordBoundary","_unused7","_unused8","head","_unused9","_x0","_x1","_x10","_hasChapterSeqForLabelRobust","_callee10","label","fieldPromises","hasStyle","hasSeq","hasArabic","hasReset","reSeq","_i5","_arr3","_f$code","oox","xml","hasFldSimpleStyle","hasFldSimpleSeq","parts","reInstr","joined","_hasStyle","_hasSeq","_hasArabic","_hasReset","_t32","_t33","_t34","_context12","_load2","_ref10","_unused1","Boolean","getOoxml","lastIndex","index","_callee12","_t38","_context14","_ref11","_callee11","_iterator5","_step5","_r2","_iterator6","_step6","_cc","_iterator7","_step7","tables","_iterator8","_step8","_r","allRange","_t35","_t36","_t37","_context13","font","highlightColor","highlightError","paraHighlightError","tableHighlightError","_x16","_step3","noFixKinds","_iterator3","_loop2","it","li","className","cursor","fix","stopPropagation","_x15","_fixIssue","fixIssue","itemError","_callee14","_t40","_context16","_ref12","_callee13","controls","_t39","_context15","getByTag","_x17","_callee16","_rules$meta2","_rules$rules$styles$b2","_rules$rules0","_rules$rules$styles$n2","_rules$rules1","_bulletRule$allowed2","_numberedRule$allowed3","_rules$rules10","_bulletRule$allowedIn2","_numberedRule$allowed4","_rules$rules11","figStyle","tblStyles","tblStyle","_t49","_context18","_ref13","_callee15","para","bestMatch","minDistance","targetStyle","targetIndent","_fixMeta","_allowedStyles","_allowedIndents","_currentIndent","_bestMatch","_minDistance","_i6","_distance","_targetStyle","_targetIndent","_it$fixMeta$expectedC","_it$fixMeta","curFirst","newLeft","_t41","_t42","_t43","_t44","_t45","_t46","_t47","_t48","_context17","getFirst","_x18"],"sourceRoot":""}